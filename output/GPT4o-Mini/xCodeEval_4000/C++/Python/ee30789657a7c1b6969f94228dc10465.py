import sys
from collections import defaultdict

MOD = 1000000007

class FastIO:
    def __init__(self):
        self.input = sys.stdin.read
        self.output = sys.stdout.write
        self.data = self.input().split()
        self.index = 0

    def read_i(self):
        value = int(self.data[self.index])
        self.index += 1
        return value

io = FastIO()

def solve():
    t = io.read_i()
    
    dp = [[[[0 for _ in range(2)] for _ in range(2)] for _ in range(2)] for _ in range(65)]
    dp[0][0][0][0] = 1

    for i in range(60):
        f2 = (t >> i) & 1
        if f2:
            dp[i + 1][0][0][0] += dp[i][0][0][0]
            dp[i + 1][1][0][0] += dp[i][0][0][0]
            dp[i + 1][0][1][0] += dp[i][0][0][0]
            dp[i + 1][1][1][0] += dp[i][0][0][0]
            dp[i + 1][0][1][0] += dp[i][0][0][1]
            dp[i + 1][1][1][0] += dp[i][0][0][1]
            dp[i + 1][0][0][1] += dp[i][0][0][1]
            dp[i + 1][1][0][1] += dp[i][0][0][1]
            dp[i + 1][1][0][0] += dp[i][0][1][0]
            dp[i + 1][0][1][0] += dp[i][0][1][0]
            dp[i + 1][1][1][0] += dp[i][0][1][0]
            dp[i + 1][0][0][1] += dp[i][0][1][0]
            dp[i + 1][1][1][0] += dp[i][0][1][1]
            dp[i + 1][0][0][1] += dp[i][0][1][1]
            dp[i + 1][1][0][1] += dp[i][0][1][1]
            dp[i + 1][0][1][1] += dp[i][0][1][1]
            dp[i + 1][0][0][0] += dp[i][1][0][0]
            dp[i + 1][1][0][0] += dp[i][1][0][0]
            dp[i + 1][0][1][0] += dp[i][1][0][0]
            dp[i + 1][1][1][0] += dp[i][1][0][0]
            dp[i + 1][0][1][0] += dp[i][1][0][1]
            dp[i + 1][1][1][0] += dp[i][1][0][1]
            dp[i + 1][0][0][1] += dp[i][1][0][1]
            dp[i + 1][1][0][1] += dp[i][1][0][1]
            dp[i + 1][1][0][0] += dp[i][1][1][0]
            dp[i + 1][0][1][0] += dp[i][1][1][0]
            dp[i + 1][1][1][0] += dp[i][1][1][0]
            dp[i + 1][0][0][1] += dp[i][1][1][0]
            dp[i + 1][1][1][0] += dp[i][1][1][1]
            dp[i + 1][0][0][1] += dp[i][1][1][1]
            dp[i + 1][1][0][1] += dp[i][1][1][1]
            dp[i + 1][0][1][1] += dp[i][1][1][1]
        else:
            dp[i + 1][0][0][0] += dp[i][0][0][0]
            dp[i + 1][1][0][0] += dp[i][0][0][0]
            dp[i + 1][0][1][0] += dp[i][0][0][0]
            dp[i + 1][1][1][0] += dp[i][0][0][0]
            dp[i + 1][0][1][0] += dp[i][0][0][1]
            dp[i + 1][1][1][0] += dp[i][0][0][1]
            dp[i + 1][0][0][1] += dp[i][0][0][1]
            dp[i + 1][1][0][1] += dp[i][0][0][1]
            dp[i + 1][1][0][0] += dp[i][0][1][0]
            dp[i + 1][0][1][0] += dp[i][0][1][0]
            dp[i + 1][1][1][0] += dp[i][0][1][0]
            dp[i + 1][0][0][1] += dp[i][0][1][0]
            dp[i + 1][1][1][0] += dp[i][0][1][1]
            dp[i + 1][0][0][1] += dp[i][0][1][1]
            dp[i + 1][1][0][1] += dp[i][0][1][1]
            dp[i + 1][0][1][1] += dp[i][0][1][1]
            dp[i + 1][1][0][0] += dp[i][1][0][0]
            dp[i + 1][0][1][0] += dp[i][1][0][0]
            dp[i + 1][1][1][0] += dp[i][1][0][0]
            dp[i + 1][0][0][1] += dp[i][1][0][0]
            dp[i + 1][1][1][0] += dp[i][1][0][1]
            dp[i + 1][0][0][1] += dp[i][1][0][1]
            dp[i + 1][1][0][1] += dp[i][1][0][1]
            dp[i + 1][0][1][1] += dp[i][1][0][1]
            dp[i + 1][0][1][0] += dp[i][1][1][0]
            dp[i + 1][1][1][0] += dp[i][1][1][0]
            dp[i + 1][0][0][1] += dp[i][1][1][0]
            dp[i + 1][1][0][1] += dp[i][1][1][0]
            dp[i + 1][0][0][1] += dp[i][1][1][1]
            dp[i + 1][1][0][1] += dp[i][1][1][1]
            dp[i + 1][0][1][1] += dp[i][1][1][1]
            dp[i + 1][1][1][1] += dp[i][1][1][1]

        for j in range(2):
            for k in range(2):
                for l in range(2):
                    dp[i + 1][j][k][l] %= MOD

    io.output(f"{dp[60][0][0][0]}\n")

def main():
    q = io.read_i()
    for _ in range(q):
        solve()

if __name__ == "__main__":
    main()
