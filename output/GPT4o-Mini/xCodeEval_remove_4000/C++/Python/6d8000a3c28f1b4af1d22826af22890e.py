def mulmod(a, b, MOD):
    if b == 0:
        return 0
    res = mulmod(a, b >> 1, MOD)
    res += res
    res %= MOD
    return (a + res) % MOD if b & 1 else res

def gcd(a, b):
    while a != 0 and b != 0:
        if a > b:
            a %= b
        else:
            b %= a
    return a + b

a = [-1, 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777, 4444, 4447, 4474, 4477, 4744, 4747, 4774, 4777, 7444, 7447, 7474, 7477, 7744, 7747, 7774, 7777, 44444, 44447, 44474, 44477, 44744, 44747, 44774, 44777, 47444, 47447, 47474, 47477, 47744, 47747, 47774, 47777, 74444, 74447, 74474, 74477, 74744, 74747, 74774, 74777, 77444, 77447, 77474, 77477, 77744, 77747, 77774, 77777, 444444, 444447, 444474, 444477, 444744, 444747, 444774, 444777, 447444, 447447, 447474, 447477, 447744, 447747, 447774, 447777, 474444, 474447, 474474, 474477, 474744, 474747, 474774, 474777, 477444, 477447, 477474, 477477, 477744, 477747, 477774, 477777, 744444, 744447, 744474, 744477, 744744, 744747, 744774, 744777, 747444, 747447, 747474, 747477, 747744, 747747, 747774, 747777, 774444, 774447, 774474, 774477, 774744, 774747, 774774, 774777, 777444, 777447, 777474, 777477, 777744, 777747, 777774, 777777, 4444444, 4444447, 4444474, 4444477, 4444744, 4444747, 4444774, 4444777, 4447444, 4447447, 4447474, 4447477, 4447744, 4447747, 4447774, 4447777, 4474444, 4474447, 4474474, 4474477, 4474744, 4474747, 4474774, 4474777, 4477444, 4477447, 4477474, 4477477, 4477744, 4477747, 4477774, 4477777, 4744444, 4744447, 4744474, 4744477, 4744744, 4744747, 4744774, 4744777, 4747444, 4747447, 4747474, 4747477, 4747744, 4747747, 4747774, 4747777, 4774444, 4774447, 4774474, 4774477, 4774744, 4774747, 4774774, 4774777, 4777444, 4777447, 4777474, 4777477, 4777744, 4777747, 4777774, 4777777, 7444444, 7444447, 7444474, 7444477, 7444744, 7444747, 7444774, 7444777, 7447444, 7447447, 7447474, 7447477, 7447744, 7447747, 7447774, 7447777, 7474444, 7474447, 7474474, 7474477, 7474744, 7474747, 7474774, 7474777, 7477444, 7477447, 7477474, 7477477, 7477744, 7477747, 7477774, 7477777, 7744444, 7744447, 7744474, 7744477, 7744744, 7744747, 7744774, 7744777, 7747444, 7747447, 7747474, 7747477, 7747744, 7747747, 7747774, 7747777, 7774444, 7774447, 7774474, 7774477, 7774744, 7774747, 7774774, 7774777, 7777444, 7777447, 7777474, 7777477, 7777744, 7777747, 7777774, 7777777, 1444444444]

pl, pr, vl, vr, k = map(int, input().split())
ans = 0
szn = len(a)
l, r = 0, szn - 1

while l < r:
    m = (l + r) // 2
    if a[m] <= pl:
        l = m + 1
    else:
        r = m

if pl == a[l - 1]:
    l -= 1

for i in range(pl, pr + 1):
    ll = l
    l1 = i
    r1 = min(a[l], pr)
    l2 = l
    for j in range(k - 1):
        if j > 0 and l < szn:
            l += 1
    if l >= szn - 1:
        l = ll + 1
        i = r1 + 1
        continue
    r2 = min(vr, a[l + 1] - 1)
    l2 = max(a[l], vl)
    if l2 <= r2:
        ans += (r2 - l2 + 1) * (r1 - l1 + 1)
    l = ll + 1
    i = r1 + 1

pl, vr = vr, pl
pr, vl = vl, pr
l, r = 0, szn - 1

while l < r:
    m = (l + r) // 2
    if a[m] <= pl:
        l = m + 1
    else:
        r = m

if pl == a[l - 1]:
    l -= 1

for i in range(pl, pr + 1):
    ll = l
    l1 = i
    r1 = min(a[l], pr)
    l2 = l
    for j in range(k - 1):
        if j > 0 and l < szn:
            l += 1
    if l >= szn - 1:
        l = ll + 1
        i = r1 + 1
        continue
    r2 = min(vr, a[l + 1] - 1)
    l2 = max(a[l], vl)
    if l2 <= r2:
        ans += (r2 - l2 + 1) * (r1 - l1 + 1)
    l = ll + 1
    i = r1 + 1

if k == 1:
    for i in range(szn):
        if pl <= a[i] <= pr and vl <= a[i] <= vr:
            ans -= 1

print(f"{ans / ((pr - pl + 1) * (vr - vl + 1)):.9f}")
