#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <deque>
#include <bitset>
#include <iomanip>
#include <cassert>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <random>
using namespace std;

#define int long long
#define double long double
#define endl '\n'
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sz(a) (int)(a).size()
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define rep1(i, n) for (int i = 1; i <= (n); ++i)
#define per(i, n) for (int i = (n)-1; i >= 0; --i)
#define per1(i, n) for (int i = (n); i >= 1; --i)
#define trav(a, x) for (auto& a : x)
#define alltrav(x) for (auto it = x.begin(); it != x.end(); ++it)
#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<pii> vpii;
typedef vector<vpii> vvpii;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef vector<char> vc;
typedef vector<vc> vvc;
typedef vector<vvc> vvvc;
typedef vector<vvvc> vvvvc;
typedef vector<vvvvc> vvvvvc;
template<class T> using pqg = priority_queue<T, vector<T>, greater<T>>;
template<class T> inline bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }
template<class T> inline bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }
template<class T> void remDup(vector<T>& v) { sort(all(v)); v.erase(unique(all(v)), v.end()); }
template<class T> string tostr(const T& x) { stringstream ss; ss << x; return ss.str(); }
template<class T> T toint(const string& s) { stringstream ss; ss << s; T x; ss >> x; return x; }
template<class T, class S> ostream& operator<<(ostream& os, const pair<T, S>& p) { return os << "(" << p.first << ", " << p.second << ")"; }
template<class T> ostream& operator<<(ostream& os, const vector<T>& v) { os << "["; rep(i, sz(v)) { if (i) os << ", "; os << v[i]; } return os << "]"; }
template<class T> ostream& operator<<(ostream& os, const set<T>& v) { os << "{"; alltrav(v) { if (it != v.begin()) os << ", "; os << *it; } return os << "}"; }
template<class T> ostream& operator<<(ostream& os, const unordered_set<T>& v) { os << "{"; alltrav(v) { if (it != v.begin()) os << ", "; os << *it; } return os << "}"; }
template<class T, class S> ostream& operator<<(ostream& os, const map<T, S>& v) { os << "{"; alltrav(v) { if (it != v.begin()) os << ", "; os << it->fi << ":" << it->se; } return os << "}"; }
template<class T, class S> ostream& operator<<(ostream& os, const unordered_map<T, S>& v) { os << "{"; alltrav(v) { if (it != v.begin()) os << ", "; os << it->fi << ":" << it->se; } return os << "}"; }
template<class T, class S> ostream& operator<<(ostream& os, const multimap<T, S>& v) { os << "{"; alltrav(v) { if (it != v.begin()) os << ", "; os << it->fi << ":" << it->se; } return os << "}"; }
template<class T, class S> ostream& operator<<(ostream& os, const unordered_multimap<T, S>& v) { os << "{"; alltrav(v) { if (it != v.begin()) os << ", "; os << it->fi << ":" << it->se; } return os << "}"; }
template<class T> void in(T& x) { cin >> x; }
template<class T, class... S> void in(T& x, S&... y) { cin >> x; in(y...); }
template<class T> void out(const T& x) { cout << x << endl; }
template<class T, class... S> void out(const T& x, const S&... y) { cout << x << ' '; out(y...); }
template<class T> void out(const vector<T>& x, int l, int r) { if (l > r) return; if (l == r) { out(x[l]); return; } out(x[l], x[r]); }
template<class T> void out(const vector<T>& x, int l, int r, int y) { if (l > r) return; if (l == r) { out(x[l], y); return; } out(x[l], x[r], y); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z) { if (l > r) return; if (l == r) { out(x[l], y, z); return; } out(x[l], x[r], y, z); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w) { if (l > r) return; if (l == r) { out(x[l], y, z, w); return; } out(x[l], x[r], y, z, w); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q); return; } out(x[l], x[r], y, z, w, q); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e); return; } out(x[l], x[r], y, z, w, q, e); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a); return; } out(x[l], x[r], y, z, w, q, e, a); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s); return; } out(x[l], x[r], y, z, w, q, e, a, s); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d); return; } out(x[l], x[r], y, z, w, q, e, a, s, d); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24); }
template<class T> void out(const vector<T>& x, int l, int r, int y, int z, int w, int q, int e, int a, int s, int d, int f, int g, int h, int j, int k, int l, int x, int c, int v, int b, int n, int m, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25) { if (l > r) return; if (l == r) { out(x[l], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25); return; } out(x[l], x[r], y, z, w, q, e, a, s, d, f, g, h, j, k, l, x, c, v, b, n, m, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25); }
