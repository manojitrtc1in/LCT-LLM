#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <deque>
#include <bitset>
#include <cassert>
#include <ctime>
#include <fstream>
#include <iomanip>
#include <sstream>
#include <complex>
#include <iterator>
#include <functional>
#include <numeric>
#include <climits>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<vi> vvi;
typedef vector<vll> vvll;
typedef vector<vpii> vvpii;
typedef vector<vpll> vvpll;

#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
#define fi first
#define se second
#define rep(i, n) for(int i=0;i<(n);++i)
#define rep1(i, n) for(int i=1;i<=(n);++i)
#define repr(i, n) for(int i=(n)-1;i>=0;--i)
#define repr1(i, n) for(int i=(n);i>=1;--i)
#define repi(i, a, b) for(int i=(a);i<(b);++i)
#define repi1(i, a, b) for(int i=(a);i<=(b);++i)
#define repir(i, a, b) for(int i=(b)-1;i>=(a);--i)
#define repir1(i, a, b) for(int i=(b);i>=(a);--i)
#define iter(it, x) for(auto it=(x).begin();it!=(x).end();++it)
#define iter1(it, x) for(auto it=(x).begin();it<=(x).end();++it)
#define mp make_pair
#define pb push_back
#define eb emplace_back
#define fi first
#define se second
#define sz(x) (int)(x).size()
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define tomax(x, y) x = max(x, (y))
#define tomin(x, y) x = min(x, (y))
#define tomaxv(x, y) if(x.size()<y.size())x=y
#define tominv(x, y) if(x.size()>y.size())x=y
#define fill(x, y) memset(x, y, sizeof(x))
#define rep(i, n) for(int i=0;i<(int)(n);++i)
#define rep1(i, n) for(int i=1;i<=(int)(n);++i)
#define repr(i, n) for(int i=(int)(n)-1;i>=0;--i)
#define repr1(i, n) for(int i=(int)(n);i>=1;--i)
#define repi(i, a, b) for(int i=(int)(a);i<(int)(b);++i)
#define repi1(i, a, b) for(int i=(int)(a);i<=(int)(b);++i)
#define repir(i, a, b) for(int i=(int)(b)-1;i>=(int)(a);--i)
#define repir1(i, a, b) for(int i=(int)(b);i>=(int)(a);--i)
#define iter(it, x) for(auto it=(x).begin();it!=(x).end();++it)
#define iter1(it, x) for(auto it=(x).begin();it<=(x).end();++it)
#define citer(it, x) for(auto it=(x).cbegin();it!=(x).cend();++it)
#define citer1(it, x) for(auto it=(x).cbegin();it<=(x).cend();++it)
#define riter(it, x) for(auto it=(x).rbegin();it!=(x).rend();++it)
#define riter1(it, x) for(auto it=(x).rbegin();it<=(x).rend();++it)
#define criter(it, x) for(auto it=(x).crbegin();it!=(x).crend();++it)
#define criter1(it, x) for(auto it=(x).crbegin();it<=(x).crend();++it)
#define exist(x, y) (find(all(x),y)!=x.end())
#define bcnt(x) (__builtin_popcountll(x))
#define bcnt32(x) (__builtin_popcount(x))
#define bsr(x) (__builtin_clzll(x))
#define bsf(x) (__builtin_ctzll(x))
#define lb lower_bound
#define ub upper_bound
#define lcnt(x, y) (lower_bound(all(x),y)-x.begin())
#define ucnt(x, y) (upper_bound(all(x),y)-x.begin())
#define round(x, y) (x%y?x/y+1:x/y)
#define getidx(v, x) (lower_bound(all(v),x)-v.begin())
#define getmaxidx(v) (max_element(all(v))-v.begin())
#define getminidx(v) (min_element(all(v))-v.begin())
#define getmax(v) (*max_element(all(v)))
#define getmin(v) (*min_element(all(v)))
#define sum(v) (accumulate(all(v),0LL))
#define vmax(v) (*max_element(all(v)))
#define vmin(v) (*min_element(all(v)))
#define vsum(v) (accumulate(all(v),0LL))
#define vsz(v) ((int)(v).size())
#define vrsz(v) ((int)(v).rsize())
#define vall(v) (v).begin(),(v).end()
#define rall(v) (v).rbegin(),(v).rend()
#define vrsall(v) (v).rbegin(),(v).rend()
#define viter(it, v) for(auto it=(v).begin();it!=(v).end();++it)
#define vriter(it, v) for(auto it=(v).rbegin();it!=(v).rend();++it)
#define vriter(it, v) for(auto it=(v).crbegin();it!=(v).crend();++it)
#define viter1(it, v) for(auto it=(v).begin();it<=(v).end();++it)
#define vriter1(it, v) for(auto it=(v).rbegin();it<=(v).rend();++it)
#define vriter1(it, v) for(auto it=(v).crbegin();it<=(v).crend();++it)
#define PQ priority_queue
#define PQG(T) priority_queue<T,vector<T>,greater<T>>
#define mkp make_pair
#define mkt make_tuple
#define rsort(v) (sort(v.rbegin(),v.rend()))
#define rrsort(v) (sort(v.rbegin(),v.rend()))
#define un(v) (v.erase(unique(all(v)),v.end()))
#define rev(v) (reverse(all(v)))
#define rot(v,n) (rotate((v).begin(),(v).begin()+(n),(v).end()))
#define rotl(v,n) (rotate((v).rbegin(),(v).rbegin()+(n),(v).rend()))
#define rotl1(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-1,(v).rend()))
#define rot1(v,n) (rotate((v).begin(),(v).begin()+(n)-1,(v).end()))
#define rotl2(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-2,(v).rend()))
#define rot2(v,n) (rotate((v).begin(),(v).begin()+(n)-2,(v).end()))
#define rotl3(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-3,(v).rend()))
#define rot3(v,n) (rotate((v).begin(),(v).begin()+(n)-3,(v).end()))
#define rotl4(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-4,(v).rend()))
#define rot4(v,n) (rotate((v).begin(),(v).begin()+(n)-4,(v).end()))
#define rotl5(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-5,(v).rend()))
#define rot5(v,n) (rotate((v).begin(),(v).begin()+(n)-5,(v).end()))
#define rotl6(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-6,(v).rend()))
#define rot6(v,n) (rotate((v).begin(),(v).begin()+(n)-6,(v).end()))
#define rotl7(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-7,(v).rend()))
#define rot7(v,n) (rotate((v).begin(),(v).begin()+(n)-7,(v).end()))
#define rotl8(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-8,(v).rend()))
#define rot8(v,n) (rotate((v).begin(),(v).begin()+(n)-8,(v).end()))
#define rotl9(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-9,(v).rend()))
#define rot9(v,n) (rotate((v).begin(),(v).begin()+(n)-9,(v).end()))
#define rotl10(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-10,(v).rend()))
#define rot10(v,n) (rotate((v).begin(),(v).begin()+(n)-10,(v).end()))
#define rotl11(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-11,(v).rend()))
#define rot11(v,n) (rotate((v).begin(),(v).begin()+(n)-11,(v).end()))
#define rotl12(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-12,(v).rend()))
#define rot12(v,n) (rotate((v).begin(),(v).begin()+(n)-12,(v).end()))
#define rotl13(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-13,(v).rend()))
#define rot13(v,n) (rotate((v).begin(),(v).begin()+(n)-13,(v).end()))
#define rotl14(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-14,(v).rend()))
#define rot14(v,n) (rotate((v).begin(),(v).begin()+(n)-14,(v).end()))
#define rotl15(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-15,(v).rend()))
#define rot15(v,n) (rotate((v).begin(),(v).begin()+(n)-15,(v).end()))
#define rotl16(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-16,(v).rend()))
#define rot16(v,n) (rotate((v).begin(),(v).begin()+(n)-16,(v).end()))
#define rotl17(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-17,(v).rend()))
#define rot17(v,n) (rotate((v).begin(),(v).begin()+(n)-17,(v).end()))
#define rotl18(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-18,(v).rend()))
#define rot18(v,n) (rotate((v).begin(),(v).begin()+(n)-18,(v).end()))
#define rotl19(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-19,(v).rend()))
#define rot19(v,n) (rotate((v).begin(),(v).begin()+(n)-19,(v).end()))
#define rotl20(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-20,(v).rend()))
#define rot20(v,n) (rotate((v).begin(),(v).begin()+(n)-20,(v).end()))
#define rotl21(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-21,(v).rend()))
#define rot21(v,n) (rotate((v).begin(),(v).begin()+(n)-21,(v).end()))
#define rotl22(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-22,(v).rend()))
#define rot22(v,n) (rotate((v).begin(),(v).begin()+(n)-22,(v).end()))
#define rotl23(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-23,(v).rend()))
#define rot23(v,n) (rotate((v).begin(),(v).begin()+(n)-23,(v).end()))
#define rotl24(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-24,(v).rend()))
#define rot24(v,n) (rotate((v).begin(),(v).begin()+(n)-24,(v).end()))
#define rotl25(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-25,(v).rend()))
#define rot25(v,n) (rotate((v).begin(),(v).begin()+(n)-25,(v).end()))
#define rotl26(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-26,(v).rend()))
#define rot26(v,n) (rotate((v).begin(),(v).begin()+(n)-26,(v).end()))
#define rotl27(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-27,(v).rend()))
#define rot27(v,n) (rotate((v).begin(),(v).begin()+(n)-27,(v).end()))
#define rotl28(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-28,(v).rend()))
#define rot28(v,n) (rotate((v).begin(),(v).begin()+(n)-28,(v).end()))
#define rotl29(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-29,(v).rend()))
#define rot29(v,n) (rotate((v).begin(),(v).begin()+(n)-29,(v).end()))
#define rotl30(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-30,(v).rend()))
#define rot30(v,n) (rotate((v).begin(),(v).begin()+(n)-30,(v).end()))
#define rotl31(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-31,(v).rend()))
#define rot31(v,n) (rotate((v).begin(),(v).begin()+(n)-31,(v).end()))
#define rotl32(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-32,(v).rend()))
#define rot32(v,n) (rotate((v).begin(),(v).begin()+(n)-32,(v).end()))
#define rotl33(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-33,(v).rend()))
#define rot33(v,n) (rotate((v).begin(),(v).begin()+(n)-33,(v).end()))
#define rotl34(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-34,(v).rend()))
#define rot34(v,n) (rotate((v).begin(),(v).begin()+(n)-34,(v).end()))
#define rotl35(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-35,(v).rend()))
#define rot35(v,n) (rotate((v).begin(),(v).begin()+(n)-35,(v).end()))
#define rotl36(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-36,(v).rend()))
#define rot36(v,n) (rotate((v).begin(),(v).begin()+(n)-36,(v).end()))
#define rotl37(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-37,(v).rend()))
#define rot37(v,n) (rotate((v).begin(),(v).begin()+(n)-37,(v).end()))
#define rotl38(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-38,(v).rend()))
#define rot38(v,n) (rotate((v).begin(),(v).begin()+(n)-38,(v).end()))
#define rotl39(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-39,(v).rend()))
#define rot39(v,n) (rotate((v).begin(),(v).begin()+(n)-39,(v).end()))
#define rotl40(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-40,(v).rend()))
#define rot40(v,n) (rotate((v).begin(),(v).begin()+(n)-40,(v).end()))
#define rotl41(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-41,(v).rend()))
#define rot41(v,n) (rotate((v).begin(),(v).begin()+(n)-41,(v).end()))
#define rotl42(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-42,(v).rend()))
#define rot42(v,n) (rotate((v).begin(),(v).begin()+(n)-42,(v).end()))
#define rotl43(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-43,(v).rend()))
#define rot43(v,n) (rotate((v).begin(),(v).begin()+(n)-43,(v).end()))
#define rotl44(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-44,(v).rend()))
#define rot44(v,n) (rotate((v).begin(),(v).begin()+(n)-44,(v).end()))
#define rotl45(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-45,(v).rend()))
#define rot45(v,n) (rotate((v).begin(),(v).begin()+(n)-45,(v).end()))
#define rotl46(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-46,(v).rend()))
#define rot46(v,n) (rotate((v).begin(),(v).begin()+(n)-46,(v).end()))
#define rotl47(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-47,(v).rend()))
#define rot47(v,n) (rotate((v).begin(),(v).begin()+(n)-47,(v).end()))
#define rotl48(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-48,(v).rend()))
#define rot48(v,n) (rotate((v).begin(),(v).begin()+(n)-48,(v).end()))
#define rotl49(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-49,(v).rend()))
#define rot49(v,n) (rotate((v).begin(),(v).begin()+(n)-49,(v).end()))
#define rotl50(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-50,(v).rend()))
#define rot50(v,n) (rotate((v).begin(),(v).begin()+(n)-50,(v).end()))
#define rotl51(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-51,(v).rend()))
#define rot51(v,n) (rotate((v).begin(),(v).begin()+(n)-51,(v).end()))
#define rotl52(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-52,(v).rend()))
#define rot52(v,n) (rotate((v).begin(),(v).begin()+(n)-52,(v).end()))
#define rotl53(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-53,(v).rend()))
#define rot53(v,n) (rotate((v).begin(),(v).begin()+(n)-53,(v).end()))
#define rotl54(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-54,(v).rend()))
#define rot54(v,n) (rotate((v).begin(),(v).begin()+(n)-54,(v).end()))
#define rotl55(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-55,(v).rend()))
#define rot55(v,n) (rotate((v).begin(),(v).begin()+(n)-55,(v).end()))
#define rotl56(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-56,(v).rend()))
#define rot56(v,n) (rotate((v).begin(),(v).begin()+(n)-56,(v).end()))
#define rotl57(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-57,(v).rend()))
#define rot57(v,n) (rotate((v).begin(),(v).begin()+(n)-57,(v).end()))
#define rotl58(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-58,(v).rend()))
#define rot58(v,n) (rotate((v).begin(),(v).begin()+(n)-58,(v).end()))
#define rotl59(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-59,(v).rend()))
#define rot59(v,n) (rotate((v).begin(),(v).begin()+(n)-59,(v).end()))
#define rotl60(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-60,(v).rend()))
#define rot60(v,n) (rotate((v).begin(),(v).begin()+(n)-60,(v).end()))
#define rotl61(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-61,(v).rend()))
#define rot61(v,n) (rotate((v).begin(),(v).begin()+(n)-61,(v).end()))
#define rotl62(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-62,(v).rend()))
#define rot62(v,n) (rotate((v).begin(),(v).begin()+(n)-62,(v).end()))
#define rotl63(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-63,(v).rend()))
#define rot63(v,n) (rotate((v).begin(),(v).begin()+(n)-63,(v).end()))
#define rotl64(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-64,(v).rend()))
#define rot64(v,n) (rotate((v).begin(),(v).begin()+(n)-64,(v).end()))
#define rotl65(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-65,(v).rend()))
#define rot65(v,n) (rotate((v).begin(),(v).begin()+(n)-65,(v).end()))
#define rotl66(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-66,(v).rend()))
#define rot66(v,n) (rotate((v).begin(),(v).begin()+(n)-66,(v).end()))
#define rotl67(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-67,(v).rend()))
#define rot67(v,n) (rotate((v).begin(),(v).begin()+(n)-67,(v).end()))
#define rotl68(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-68,(v).rend()))
#define rot68(v,n) (rotate((v).begin(),(v).begin()+(n)-68,(v).end()))
#define rotl69(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-69,(v).rend()))
#define rot69(v,n) (rotate((v).begin(),(v).begin()+(n)-69,(v).end()))
#define rotl70(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-70,(v).rend()))
#define rot70(v,n) (rotate((v).begin(),(v).begin()+(n)-70,(v).end()))
#define rotl71(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-71,(v).rend()))
#define rot71(v,n) (rotate((v).begin(),(v).begin()+(n)-71,(v).end()))
#define rotl72(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-72,(v).rend()))
#define rot72(v,n) (rotate((v).begin(),(v).begin()+(n)-72,(v).end()))
#define rotl73(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-73,(v).rend()))
#define rot73(v,n) (rotate((v).begin(),(v).begin()+(n)-73,(v).end()))
#define rotl74(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-74,(v).rend()))
#define rot74(v,n) (rotate((v).begin(),(v).begin()+(n)-74,(v).end()))
#define rotl75(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-75,(v).rend()))
#define rot75(v,n) (rotate((v).begin(),(v).begin()+(n)-75,(v).end()))
#define rotl76(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-76,(v).rend()))
#define rot76(v,n) (rotate((v).begin(),(v).begin()+(n)-76,(v).end()))
#define rotl77(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-77,(v).rend()))
#define rot77(v,n) (rotate((v).begin(),(v).begin()+(n)-77,(v).end()))
#define rotl78(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-78,(v).rend()))
#define rot78(v,n) (rotate((v).begin(),(v).begin()+(n)-78,(v).end()))
#define rotl79(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-79,(v).rend()))
#define rot79(v,n) (rotate((v).begin(),(v).begin()+(n)-79,(v).end()))
#define rotl80(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-80,(v).rend()))
#define rot80(v,n) (rotate((v).begin(),(v).begin()+(n)-80,(v).end()))
#define rotl81(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-81,(v).rend()))
#define rot81(v,n) (rotate((v).begin(),(v).begin()+(n)-81,(v).end()))
#define rotl82(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-82,(v).rend()))
#define rot82(v,n) (rotate((v).begin(),(v).begin()+(n)-82,(v).end()))
#define rotl83(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-83,(v).rend()))
#define rot83(v,n) (rotate((v).begin(),(v).begin()+(n)-83,(v).end()))
#define rotl84(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-84,(v).rend()))
#define rot84(v,n) (rotate((v).begin(),(v).begin()+(n)-84,(v).end()))
#define rotl85(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-85,(v).rend()))
#define rot85(v,n) (rotate((v).begin(),(v).begin()+(n)-85,(v).end()))
#define rotl86(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-86,(v).rend()))
#define rot86(v,n) (rotate((v).begin(),(v).begin()+(n)-86,(v).end()))
#define rotl87(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-87,(v).rend()))
#define rot87(v,n) (rotate((v).begin(),(v).begin()+(n)-87,(v).end()))
#define rotl88(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-88,(v).rend()))
#define rot88(v,n) (rotate((v).begin(),(v).begin()+(n)-88,(v).end()))
#define rotl89(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-89,(v).rend()))
#define rot89(v,n) (rotate((v).begin(),(v).begin()+(n)-89,(v).end()))
#define rotl90(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-90,(v).rend()))
#define rot90(v,n) (rotate((v).begin(),(v).begin()+(n)-90,(v).end()))
#define rotl91(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-91,(v).rend()))
#define rot91(v,n) (rotate((v).begin(),(v).begin()+(n)-91,(v).end()))
#define rotl92(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-92,(v).rend()))
#define rot92(v,n) (rotate((v).begin(),(v).begin()+(n)-92,(v).end()))
#define rotl93(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-93,(v).rend()))
#define rot93(v,n) (rotate((v).begin(),(v).begin()+(n)-93,(v).end()))
#define rotl94(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-94,(v).rend()))
#define rot94(v,n) (rotate((v).begin(),(v).begin()+(n)-94,(v).end()))
#define rotl95(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-95,(v).rend()))
#define rot95(v,n) (rotate((v).begin(),(v).begin()+(n)-95,(v).end()))
#define rotl96(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-96,(v).rend()))
#define rot96(v,n) (rotate((v).begin(),(v).begin()+(n)-96,(v).end()))
#define rotl97(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-97,(v).rend()))
#define rot97(v,n) (rotate((v).begin(),(v).begin()+(n)-97,(v).end()))
#define rotl98(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-98,(v).rend()))
#define rot98(v,n) (rotate((v).begin(),(v).begin()+(n)-98,(v).end()))
#define rotl99(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-99,(v).rend()))
#define rot99(v,n) (rotate((v).begin(),(v).begin()+(n)-99,(v).end()))
#define rotl100(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-100,(v).rend()))
#define rot100(v,n) (rotate((v).begin(),(v).begin()+(n)-100,(v).end()))
#define rotl101(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-101,(v).rend()))
#define rot101(v,n) (rotate((v).begin(),(v).begin()+(n)-101,(v).end()))
#define rotl102(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-102,(v).rend()))
#define rot102(v,n) (rotate((v).begin(),(v).begin()+(n)-102,(v).end()))
#define rotl103(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-103,(v).rend()))
#define rot103(v,n) (rotate((v).begin(),(v).begin()+(n)-103,(v).end()))
#define rotl104(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-104,(v).rend()))
#define rot104(v,n) (rotate((v).begin(),(v).begin()+(n)-104,(v).end()))
#define rotl105(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-105,(v).rend()))
#define rot105(v,n) (rotate((v).begin(),(v).begin()+(n)-105,(v).end()))
#define rotl106(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-106,(v).rend()))
#define rot106(v,n) (rotate((v).begin(),(v).begin()+(n)-106,(v).end()))
#define rotl107(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-107,(v).rend()))
#define rot107(v,n) (rotate((v).begin(),(v).begin()+(n)-107,(v).end()))
#define rotl108(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-108,(v).rend()))
#define rot108(v,n) (rotate((v).begin(),(v).begin()+(n)-108,(v).end()))
#define rotl109(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-109,(v).rend()))
#define rot109(v,n) (rotate((v).begin(),(v).begin()+(n)-109,(v).end()))
#define rotl110(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-110,(v).rend()))
#define rot110(v,n) (rotate((v).begin(),(v).begin()+(n)-110,(v).end()))
#define rotl111(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-111,(v).rend()))
#define rot111(v,n) (rotate((v).begin(),(v).begin()+(n)-111,(v).end()))
#define rotl112(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-112,(v).rend()))
#define rot112(v,n) (rotate((v).begin(),(v).begin()+(n)-112,(v).end()))
#define rotl113(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-113,(v).rend()))
#define rot113(v,n) (rotate((v).begin(),(v).begin()+(n)-113,(v).end()))
#define rotl114(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-114,(v).rend()))
#define rot114(v,n) (rotate((v).begin(),(v).begin()+(n)-114,(v).end()))
#define rotl115(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-115,(v).rend()))
#define rot115(v,n) (rotate((v).begin(),(v).begin()+(n)-115,(v).end()))
#define rotl116(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-116,(v).rend()))
#define rot116(v,n) (rotate((v).begin(),(v).begin()+(n)-116,(v).end()))
#define rotl117(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-117,(v).rend()))
#define rot117(v,n) (rotate((v).begin(),(v).begin()+(n)-117,(v).end()))
#define rotl118(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-118,(v).rend()))
#define rot118(v,n) (rotate((v).begin(),(v).begin()+(n)-118,(v).end()))
#define rotl119(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-119,(v).rend()))
#define rot119(v,n) (rotate((v).begin(),(v).begin()+(n)-119,(v).end()))
#define rotl120(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-120,(v).rend()))
#define rot120(v,n) (rotate((v).begin(),(v).begin()+(n)-120,(v).end()))
#define rotl121(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-121,(v).rend()))
#define rot121(v,n) (rotate((v).begin(),(v).begin()+(n)-121,(v).end()))
#define rotl122(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-122,(v).rend()))
#define rot122(v,n) (rotate((v).begin(),(v).begin()+(n)-122,(v).end()))
#define rotl123(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-123,(v).rend()))
#define rot123(v,n) (rotate((v).begin(),(v).begin()+(n)-123,(v).end()))
#define rotl124(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-124,(v).rend()))
#define rot124(v,n) (rotate((v).begin(),(v).begin()+(n)-124,(v).end()))
#define rotl125(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-125,(v).rend()))
#define rot125(v,n) (rotate((v).begin(),(v).begin()+(n)-125,(v).end()))
#define rotl126(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-126,(v).rend()))
#define rot126(v,n) (rotate((v).begin(),(v).begin()+(n)-126,(v).end()))
#define rotl127(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-127,(v).rend()))
#define rot127(v,n) (rotate((v).begin(),(v).begin()+(n)-127,(v).end()))
#define rotl128(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-128,(v).rend()))
#define rot128(v,n) (rotate((v).begin(),(v).begin()+(n)-128,(v).end()))
#define rotl129(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-129,(v).rend()))
#define rot129(v,n) (rotate((v).begin(),(v).begin()+(n)-129,(v).end()))
#define rotl130(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-130,(v).rend()))
#define rot130(v,n) (rotate((v).begin(),(v).begin()+(n)-130,(v).end()))
#define rotl131(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-131,(v).rend()))
#define rot131(v,n) (rotate((v).begin(),(v).begin()+(n)-131,(v).end()))
#define rotl132(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-132,(v).rend()))
#define rot132(v,n) (rotate((v).begin(),(v).begin()+(n)-132,(v).end()))
#define rotl133(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-133,(v).rend()))
#define rot133(v,n) (rotate((v).begin(),(v).begin()+(n)-133,(v).end()))
#define rotl134(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-134,(v).rend()))
#define rot134(v,n) (rotate((v).begin(),(v).begin()+(n)-134,(v).end()))
#define rotl135(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-135,(v).rend()))
#define rot135(v,n) (rotate((v).begin(),(v).begin()+(n)-135,(v).end()))
#define rotl136(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-136,(v).rend()))
#define rot136(v,n) (rotate((v).begin(),(v).begin()+(n)-136,(v).end()))
#define rotl137(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-137,(v).rend()))
#define rot137(v,n) (rotate((v).begin(),(v).begin()+(n)-137,(v).end()))
#define rotl138(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-138,(v).rend()))
#define rot138(v,n) (rotate((v).begin(),(v).begin()+(n)-138,(v).end()))
#define rotl139(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-139,(v).rend()))
#define rot139(v,n) (rotate((v).begin(),(v).begin()+(n)-139,(v).end()))
#define rotl140(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-140,(v).rend()))
#define rot140(v,n) (rotate((v).begin(),(v).begin()+(n)-140,(v).end()))
#define rotl141(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-141,(v).rend()))
#define rot141(v,n) (rotate((v).begin(),(v).begin()+(n)-141,(v).end()))
#define rotl142(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-142,(v).rend()))
#define rot142(v,n) (rotate((v).begin(),(v).begin()+(n)-142,(v).end()))
#define rotl143(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-143,(v).rend()))
#define rot143(v,n) (rotate((v).begin(),(v).begin()+(n)-143,(v).end()))
#define rotl144(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-144,(v).rend()))
#define rot144(v,n) (rotate((v).begin(),(v).begin()+(n)-144,(v).end()))
#define rotl145(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-145,(v).rend()))
#define rot145(v,n) (rotate((v).begin(),(v).begin()+(n)-145,(v).end()))
#define rotl146(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-146,(v).rend()))
#define rot146(v,n) (rotate((v).begin(),(v).begin()+(n)-146,(v).end()))
#define rotl147(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-147,(v).rend()))
#define rot147(v,n) (rotate((v).begin(),(v).begin()+(n)-147,(v).end()))
#define rotl148(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-148,(v).rend()))
#define rot148(v,n) (rotate((v).begin(),(v).begin()+(n)-148,(v).end()))
#define rotl149(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-149,(v).rend()))
#define rot149(v,n) (rotate((v).begin(),(v).begin()+(n)-149,(v).end()))
#define rotl150(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-150,(v).rend()))
#define rot150(v,n) (rotate((v).begin(),(v).begin()+(n)-150,(v).end()))
#define rotl151(v,n) (rotate((v).rbegin(),(v).rbegin()+(n)-151,(v).rend()))
#define rot151(v,n) (rotate((v).begin(),(v).begin()+(n)-151,(v).end()))
