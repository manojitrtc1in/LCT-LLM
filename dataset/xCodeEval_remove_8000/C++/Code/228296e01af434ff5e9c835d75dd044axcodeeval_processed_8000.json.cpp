



















































































































































































































































































 
























































































































































































































































































































































































































































































































































 




 


 










 






 


























 

























 
































































































































































































 




 






 







































 








 




















































 

































 




 


 




 






 




















 




















 








 










































































 












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































typedef long long LL;
using namespace std;

int n, m, cnt;

unordered_map<int, bool> mp[100005];
set<int> s;

void dfs(int x){
	s.erase(x);
	vector<int> v;
	for (auto it : s) if(!mp[x][it]) v.push_back(it);
	for (auto it : v) s.erase(it);
	for (auto it : v) dfs(it);
}

int main()
{
	

	


	scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; i++) s.insert(i);
	for (int i = 1, u, v; i <= m; i++){
		scanf("%d %d", &u, &v);
		mp[u][v] = mp[v][u] = true;
	}
	int ans = 0;
	while((int)s.size()){
		dfs(*s.begin());
		ans++;
	}
	printf("%d\n", ans - 1);

	return 0;
}


