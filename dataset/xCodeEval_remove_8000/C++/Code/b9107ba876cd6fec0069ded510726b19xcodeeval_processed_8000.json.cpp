





void *operator new(std::size_t sz) { static char *b, *e; if (b + sz > e) { b = (char *) std::malloc(sz > (1 << 20) ? sz : (1 << 20)); e = b + (sz > (1 << 20) ? sz : (1 << 20)); } return e -= sz; }
struct $t_bsl_Bool { enum { $e_bsl_False, $e_bsl_True } T; void* ptr; };
struct $d_bsl_False { };
struct $d_bsl_True { };
struct $t_bsl_IO { enum { $e_bsl_Pure, $e_bsl_Free } T; void* ptr; };
struct $d_bsl_Pure { void* d0; };
struct $d_bsl_Free { void* d0; };
struct $t_bsl_IOImpl { enum { $e_bsl_Read, $e_bsl_Write } T; void* ptr; };
struct $d_bsl_Read { void* d0; };
struct $d_bsl_Write { void* d0; void* d1; };
typedef  void  $t_bsl_Int;
struct $t_bsl_List { enum { $e_bsl_Nil, $e_bsl_Cons } T; void* ptr; };
struct $d_bsl_Nil { };
struct $d_bsl_Cons { void* d0; void* d1; };
struct $t_bsl_Maybe { enum { $e_bsl_Just, $e_bsl_Nothing } T; void* ptr; };
struct $d_bsl_Just { void* d0; };
struct $d_bsl_Nothing { };
struct $t_bsl_Pair { enum { $e_bsl_Pair } T; void* ptr; };
struct $d_bsl_Pair { void* d0; void* d1; };
struct $t_bsl_Unit { enum { $e_bsl_Unit } T; void* ptr; };
struct $d_bsl_Unit { };
int main() { [=]() -> void* { void* $id36 = new $t_bsl_Unit { $t_bsl_Unit::$e_bsl_Unit, new $d_bsl_Unit{ } };  void* $v_bsl_Unit = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id16) -> void* { return new std::function<void*(void*)>([=](void* $id1) -> void* { return new $t_bsl_Pair { $t_bsl_Pair::$e_bsl_Pair, new $d_bsl_Pair{ $id16, $id1 } }; }); });  void* $id13 = $id36; return [=]() -> void* { void* $id36 = new $t_bsl_Maybe { $t_bsl_Maybe::$e_bsl_Nothing, new $d_bsl_Nothing{ } };  void* $v_bsl_Nothing = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id16) -> void* { return new $t_bsl_Maybe { $t_bsl_Maybe::$e_bsl_Just, new $d_bsl_Just{ $id16 } }; });  void* $v_bsl_Just = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id16) -> void* { return new std::function<void*(void*)>([=](void* $id1) -> void* { return new $t_bsl_List { $t_bsl_List::$e_bsl_Cons, new $d_bsl_Cons{ $id16, $id1 } }; }); });  void* $id0 = $id36; return [=]() -> void* { void* $id36 = new $t_bsl_List { $t_bsl_List::$e_bsl_Nil, new $d_bsl_Nil{ } };  void* $v_bsl_Nil = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id16) -> void* { return new std::function<void*(void*)>([=](void* $id1) -> void* { return new $t_bsl_IOImpl { $t_bsl_IOImpl::$e_bsl_Write, new $d_bsl_Write{ $id16, $id1 } }; }); });  void* $id34 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id16) -> void* { return new $t_bsl_IOImpl { $t_bsl_IOImpl::$e_bsl_Read, new $d_bsl_Read{ $id16 } }; });  void* $id22 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id16) -> void* { return new $t_bsl_IO { $t_bsl_IO::$e_bsl_Free, new $d_bsl_Free{ $id16 } }; });  void* $id10 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id16) -> void* { return new $t_bsl_IO { $t_bsl_IO::$e_bsl_Pure, new $d_bsl_Pure{ $id16 } }; });  void* $id9 = $id36; return [=]() -> void* { void* $id36 = new $t_bsl_Bool { $t_bsl_Bool::$e_bsl_True, new $d_bsl_True{ } };  void* $v_bsl_True = $id36; return [=]() -> void* { void* $id36 = new $t_bsl_Bool { $t_bsl_Bool::$e_bsl_False, new $d_bsl_False{ } };  void* $v_bsl_False = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id28) -> void* { return new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_IOImpl*)($id36))->T) { case $t_bsl_IOImpl::$e_bsl_Write: {void* $v_bsl_s = (($d_bsl_Write*)((($t_bsl_IOImpl*)($id36))->ptr))->d0;void* $id25 = (($d_bsl_Write*)((($t_bsl_IOImpl*)($id36))->ptr))->d1; return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id34)))($v_bsl_s))))((*((std::function<void*(void*)>*)($id28)))($id25)); } case $t_bsl_IOImpl::$e_bsl_Read: {void* $id25 = (($d_bsl_Read*)((($t_bsl_IOImpl*)($id36))->ptr))->d0; return (*((std::function<void*(void*)>*)($id22)))(new std::function<void*(void*)>([=](void* $v_bsl_s) -> void* { return (*((std::function<void*(void*)>*)($id28)))((*((std::function<void*(void*)>*)($id25)))($v_bsl_s)); })); } } }(); }); });  void* $id30 = $id36; return [=]() -> void* { void* $id36 = $id9;  void* $id2 = $id36; return [=]() -> void* { void *$id12 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return new std::function<void*(void*)>([=](void* $id28) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_IO*)($id36))->T) { case $t_bsl_IO::$e_bsl_Pure: {void* $id35 = (($d_bsl_Pure*)((($t_bsl_IO*)($id36))->ptr))->d0; return (*((std::function<void*(void*)>*)($id28)))($id35); } case $t_bsl_IO::$e_bsl_Free: {void* $id35 = (($d_bsl_Free*)((($t_bsl_IO*)($id36))->ptr))->d0; return (*((std::function<void*(void*)>*)($id10)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id30)))(new std::function<void*(void*)>([=](void* $v_bsl_y) -> void* { return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id12)))($v_bsl_y))))($id28); })))))($id35)); } } }(); }); }); std::memcpy($id12, $id36, sizeof (std::function<void*(void*)>)); } return [=]() -> void* { void* $id36 = (*((std::function<void*(void*)>*)($id10)))((*((std::function<void*(void*)>*)($id22)))(new std::function<void*(void*)>([=](void* $id35) -> void* { return (*((std::function<void*(void*)>*)($id2)))($id35); })));  void* $v_bsl_getInt = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return (*((std::function<void*(void*)>*)($id10)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id34)))($id35))))((*((std::function<void*(void*)>*)($id2)))($v_bsl_Unit))); });  void* $id17 = $id36; return [=]() -> void* { void *$id29 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_IO*)($id36))->T) { case $t_bsl_IO::$e_bsl_Pure: {void* $id35 = (($d_bsl_Pure*)((($t_bsl_IO*)($id36))->ptr))->d0; return $id35; } case $t_bsl_IO::$e_bsl_Free: {void* $id35 = (($d_bsl_Free*)((($t_bsl_IO*)($id36))->ptr))->d0; return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_IOImpl*)($id36))->T) { case $t_bsl_IOImpl::$e_bsl_Write: {void* $v_bsl_c = (($d_bsl_Write*)((($t_bsl_IOImpl*)($id36))->ptr))->d0;void* $id35 = (($d_bsl_Write*)((($t_bsl_IOImpl*)($id36))->ptr))->d1; return [=]() -> void* { void* $id36 =  (std::printf("%d\n", (std::intptr_t) $v_bsl_c), nullptr) ;  void* $v_bsl__ = $id36; return (*((std::function<void*(void*)>*)($id29)))($id35); } (); } case $t_bsl_IOImpl::$e_bsl_Read: {void* $id32 = (($d_bsl_Read*)((($t_bsl_IOImpl*)($id36))->ptr))->d0; return [=]() -> void* { void* $id36 =  [=]() -> void* {
        int x;
        if (std::scanf("%d", &x) == 1)
          return (*((std::function<void*(void*)>*)$v_bsl_Just))((void*) (std::intptr_t) x);
        else
          return $v_bsl_Nothing;
      }() ;  void* $id35 = $id36; return (*((std::function<void*(void*)>*)($id29)))((*((std::function<void*(void*)>*)($id32)))($id35)); } (); } } }(); } } }(); }); std::memcpy($id29, $id36, sizeof (std::function<void*(void*)>)); } return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_Bool*)($id36))->T) { case $t_bsl_Bool::$e_bsl_True: { return $v_bsl_False; } case $t_bsl_Bool::$e_bsl_False: { return $v_bsl_True; } } }(); });  void* $id5 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_Bool*)($id36))->T) { case $t_bsl_Bool::$e_bsl_True: { return new std::function<void*(void*)>([=](void* $id35) -> void* { return $id35; }); } case $t_bsl_Bool::$e_bsl_False: { return new std::function<void*(void*)>([=](void* $id35) -> void* { return $v_bsl_False; }); } } }(); });  void* $v_bsl_band = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  (void*) (((std::intptr_t) $id33) + ((std::intptr_t) $v_bsl_b)) ; }); });  void* $id4 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return  (void*) -((std::intptr_t) $id33) ; });  void* $v_bsl_neg = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  (void*) (((std::intptr_t) $id33) - ((std::intptr_t) $v_bsl_b)) ; }); });  void* $id40 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  (void*) (((std::intptr_t) $id33) * ((std::intptr_t) $v_bsl_b)) ; }); });  void* $v_bsl_mul = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  (void*) (((std::intptr_t) $id33) / ((std::intptr_t) $v_bsl_b)) ; }); });  void* $v_bsl_div = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  (void*) (((std::intptr_t) $id33) % ((std::intptr_t) $v_bsl_b)) ; }); });  void* $id6 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  (((std::intptr_t) $id33) < ((std::intptr_t) $v_bsl_b))?$v_bsl_True:$v_bsl_False ; }); });  void* $id27 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return  ((std::intptr_t) $id33) == 0?$v_bsl_True:$v_bsl_False ; });  void* $id18 = $id36; return [=]() -> void* { void *$id37 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return [=]() -> void* { void* $id36 = (*((std::function<void*(void*)>*)($id18)))($id33); switch ((($t_bsl_Bool*)($id36))->T) { case $t_bsl_Bool::$e_bsl_True: { return $v_bsl_b; } case $t_bsl_Bool::$e_bsl_False: { return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id37)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id6)))($v_bsl_b))))($id33)))))($id33); } } }(); }); }); std::memcpy($id37, $id36, sizeof (std::function<void*(void*)>)); } return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_y) -> void* { return [=]() -> void* { void* $id36 = (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id27)))($id35))))($v_bsl_y); switch ((($t_bsl_Bool*)($id36))->T) { case $t_bsl_Bool::$e_bsl_True: { return $v_bsl_y; } case $t_bsl_Bool::$e_bsl_False: { return $id35; } } }(); }); });  void* $id31 = $id36; return [=]() -> void* { void *$id11 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id33) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_b) -> void* { return [=]() -> void* { void* $id36 = $id33; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Nil: { return $v_bsl_b; } case $t_bsl_List::$e_bsl_Cons: {void* $id35 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $v_bsl_xs = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id0)))($id35))))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id11)))($v_bsl_xs))))($v_bsl_b)); } } }(); }); }); std::memcpy($id11, $id36, sizeof (std::function<void*(void*)>)); } return [=]() -> void* { void *$id39 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id3) -> void* { return new std::function<void*(void*)>([=](void* $id28) -> void* { return [=]() -> void* { void* $id36 = $id3; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Nil: { return $v_bsl_Nil; } case $t_bsl_List::$e_bsl_Cons: {void* $id35 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $v_bsl_xs = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return [=]() -> void* { void* $id36 = (*((std::function<void*(void*)>*)($id28)))($id35); switch ((($t_bsl_Bool*)($id36))->T) { case $t_bsl_Bool::$e_bsl_True: { return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id0)))($id35))))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id39)))($v_bsl_xs))))($id28)); } case $t_bsl_Bool::$e_bsl_False: { return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id39)))($v_bsl_xs))))($id28); } } }(); } } }(); }); }); std::memcpy($id39, $id36, sizeof (std::function<void*(void*)>)); } return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id27) -> void* { return [=]() -> void* { void *$id26 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id3) -> void* { return [=]() -> void* { void* $id36 = $id3; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Nil: { return $v_bsl_Nil; } case $t_bsl_List::$e_bsl_Cons: {void* $id35 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $v_bsl_xs = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id11)))((*((std::function<void*(void*)>*)($id26)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id39)))($v_bsl_xs))))(new std::function<void*(void*)>([=](void* $v_bsl_y) -> void* { return (*((std::function<void*(void*)>*)($id5)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id27)))($id35))))($v_bsl_y)); })))))))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id0)))($id35))))((*((std::function<void*(void*)>*)($id26)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id39)))($v_bsl_xs))))((*((std::function<void*(void*)>*)($id27)))($id35))))); } } }(); }); std::memcpy($id26, $id36, sizeof (std::function<void*(void*)>)); } return $id26; } (); });  void* $v_bsl_sort = $id36; return [=]() -> void* { void *$v_bsl_getList = new $t_bsl_IO(); { void* $id36 = (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id12)))($v_bsl_getInt))))(new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_Maybe*)($id36))->T) { case $t_bsl_Maybe::$e_bsl_Just: {void* $id35 = (($d_bsl_Just*)((($t_bsl_Maybe*)($id36))->ptr))->d0; return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id12)))($v_bsl_getList))))(new std::function<void*(void*)>([=](void* $v_bsl_xs) -> void* { return (*((std::function<void*(void*)>*)($id2)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id0)))($id35))))($v_bsl_xs)); })); } case $t_bsl_Maybe::$e_bsl_Nothing: { return (*((std::function<void*(void*)>*)($id2)))($v_bsl_Nil); } } }(); })); std::memcpy($v_bsl_getList, $id36, sizeof ($t_bsl_IO)); } return [=]() -> void* { void *$id8 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id3) -> void* { return [=]() -> void* { void* $id36 = $id3; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Nil: { return (*((std::function<void*(void*)>*)($id2)))($v_bsl_Unit); } case $t_bsl_List::$e_bsl_Cons: {void* $id35 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $v_bsl_xs = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id12)))((*((std::function<void*(void*)>*)($id17)))($id35)))))(new std::function<void*(void*)>([=](void* $v_bsl__) -> void* { return (*((std::function<void*(void*)>*)($id8)))($v_bsl_xs); })); } } }(); }); std::memcpy($id8, $id36, sizeof (std::function<void*(void*)>)); } return [=]() -> void* { void *$id14 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Nil: { return $v_bsl_Nil; } case $t_bsl_List::$e_bsl_Cons: {void* $id7 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $id15 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return [=]() -> void* { void* $id36 = $id15; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Cons: {void* $v_bsl_h_ = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $v_bsl_t_ = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id0)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id13)))($id7))))($v_bsl_h_)))))((*((std::function<void*(void*)>*)($id14)))($v_bsl_t_)); } } }(); } } }(); }); std::memcpy($id14, $id36, sizeof (std::function<void*(void*)>)); } return [=]() -> void* { void* $id36 =  (void*)0 ;  void* $v_bsl_zero = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $v_bsl_lst) -> void* { return [=]() -> void* { void *$id21 = new std::function<void*(void*)>(); { void* $id36 = new std::function<void*(void*)>([=](void* $id38) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_unfinishedTask) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_currentTime) -> void* { return new std::function<void*(void*)>([=](void* $v_bsl_maxTask) -> void* { return [=]() -> void* { void* $id36 = $id38; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Nil: { return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id13)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id4)))($v_bsl_currentTime))))($v_bsl_unfinishedTask)))))($v_bsl_maxTask); } case $t_bsl_List::$e_bsl_Cons: {void* $id7 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $v_bsl_xs = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return [=]() -> void* { void* $id36 = $id7; switch ((($t_bsl_Pair*)($id36))->T) { case $t_bsl_Pair::$e_bsl_Pair: {void* $id15 = (($d_bsl_Pair*)((($t_bsl_Pair*)($id36))->ptr))->d0;void* $v_bsl_c = (($d_bsl_Pair*)((($t_bsl_Pair*)($id36))->ptr))->d1; return [=]() -> void* { void* $id36 = (*((std::function<void*(void*)>*)($id18)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id40)))($id15))))($v_bsl_currentTime)); switch ((($t_bsl_Bool*)($id36))->T) { case $t_bsl_Bool::$e_bsl_True: { return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id21)))($v_bsl_xs))))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id4)))($v_bsl_unfinishedTask))))($v_bsl_c)))))($v_bsl_currentTime))))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id31)))($v_bsl_maxTask))))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id4)))($v_bsl_unfinishedTask))))($v_bsl_c))); } case $t_bsl_Bool::$e_bsl_False: { return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id21)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id0)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id13)))($id15))))($v_bsl_c)))))($v_bsl_xs)))))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id31)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id4)))((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id40)))($v_bsl_unfinishedTask))))($id15)))))($v_bsl_currentTime)))))($v_bsl_zero)))))($id15))))($v_bsl_maxTask); } } }(); } } }(); } } }(); }); }); }); }); std::memcpy($id21, $id36, sizeof (std::function<void*(void*)>)); } return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id21)))($v_bsl_lst))))($v_bsl_zero))))($v_bsl_zero))))($v_bsl_zero); } (); });  void* $id24 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_Pair*)($id36))->T) { case $t_bsl_Pair::$e_bsl_Pair: {void* $id28 = (($d_bsl_Pair*)((($t_bsl_Pair*)($id36))->ptr))->d0;void* $v_bsl__ = (($d_bsl_Pair*)((($t_bsl_Pair*)($id36))->ptr))->d1; return $id28; } } }(); });  void* $id19 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_Pair*)($id36))->T) { case $t_bsl_Pair::$e_bsl_Pair: {void* $v_bsl__ = (($d_bsl_Pair*)((($t_bsl_Pair*)($id36))->ptr))->d0;void* $v_bsl_s = (($d_bsl_Pair*)((($t_bsl_Pair*)($id36))->ptr))->d1; return $v_bsl_s; } } }(); });  void* $id20 = $id36; return [=]() -> void* { void* $id36 = new std::function<void*(void*)>([=](void* $id35) -> void* { return [=]() -> void* { void* $id36 = $id35; switch ((($t_bsl_List*)($id36))->T) { case $t_bsl_List::$e_bsl_Cons: {void* $v_bsl__ = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d0;void* $id15 = (($d_bsl_Cons*)((($t_bsl_List*)($id36))->ptr))->d1; return $id15; } } }(); });  void* $id23 = $id36; return [=]() -> void* { void* $id36 = (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id12)))($v_bsl_getList))))(new std::function<void*(void*)>([=](void* $v_bsl_numbers) -> void* { return [=]() -> void* { void* $id36 = (*((std::function<void*(void*)>*)($id24)))((*((std::function<void*(void*)>*)($id14)))((*((std::function<void*(void*)>*)($id23)))($v_bsl_numbers)));  void* $v_bsl_ans = $id36; return (*((std::function<void*(void*)>*)((*((std::function<void*(void*)>*)($id12)))((*((std::function<void*(void*)>*)($id17)))((*((std::function<void*(void*)>*)($id19)))($v_bsl_ans))))))(new std::function<void*(void*)>([=](void* $v_bsl__) -> void* { return (*((std::function<void*(void*)>*)($id17)))((*((std::function<void*(void*)>*)($id20)))($v_bsl_ans)); })); } (); }));  void* $v_bsl_main = $id36; return (*((std::function<void*(void*)>*)($id29)))($v_bsl_main); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); }