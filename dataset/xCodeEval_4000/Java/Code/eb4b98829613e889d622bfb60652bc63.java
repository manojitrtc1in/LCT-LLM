import java.util.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.FileWriter;
import java.io.PrintWriter;

public class LinovaKing {
    static ArrayList<Integer> adj[];
    static int[] depth,subtree;
    public static void solve() {

        Scanner s = new Scanner(System.in);
        int n = s.nextInt(), k = s.nextInt();
        adj = new ArrayList[n];
        for(int i = 0 ; i<n; i++)
            adj[i] = new ArrayList<Integer>();

        for(int i = 0; i<n-1; i++) {
            int a = s.nextInt()-1, b = s.nextInt()-1;
            adj[a].add(b);
            adj[b].add(a);
        }
        depth = new int[n];
        subtree = new int[n];

        dfs(0,-1);

        for(int i = 0; i<n; i++) depth[i]=depth[i]-subtree[i];
        Arrays.sort(depth);
        long ans = 0;
        for(int i = 0; i<k; i++) ans+=depth[n-i-1];
        System.out.println(ans);
    }
    public static void dfs(int i, int prev) {
        for(Integer next : adj[i]) {
            if(next==prev) continue;
            depth[next] = depth[i]+1;
            dfs(next, i);
            subtree[i] += subtree[next]+1;
        }
    }

    public static void main(String[] args) {

        solve();
    }






































































































































































































































































































































































































































































































































































































































































































































































































































































































































}