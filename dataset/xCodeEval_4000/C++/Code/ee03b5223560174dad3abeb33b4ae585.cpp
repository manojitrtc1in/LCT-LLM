#include<bits/stdc++.h>
#define MOD (lli)(1e9+7)
#define PR 998244353
#define INF LLONG_MAX
#define newl cout<<'\n'
#define space cout<<' '
#define bar cout<<'-'
#define mt make_tuple 
#define pb push_back
#define pob pop_back
#define ff first
#define ss second
#define vi vector<lli>
#define pll pair <lli,lli>
#define vpi vector<pll >
#define all(p) p.begin(),p.end()
#define lli long long
#define sz(a) (lli)((a).size())
#define form(i, l, r) for (lli i = l; i > r; --i)
#define forl(i, l, r) for (lli i = l; i < r; ++i)
#define pat(i, l, r, a); for (lli i = l; i < r; ++i){cout<<a[i]<<" ";}cout<<endl;
#define ppt(i, l, r, a); for (lli i = l; i < r; ++i){cout<<a[i].ff<<"-"<<a[i].ss<<" ";}cout<<endl;
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
 




 





struct custom_hash {
    static uint64_t splitmix64(uint64_t x) {
        x += 0x9e3779b97f4a7c15;
        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
        return x ^ (x >> 31);
    }
 
    size_t operator()(uint64_t x) const {
        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();
        return splitmix64(x + FIXED_RANDOM);
    }
};
 




 








 






 




 






 






 





















inline lli powmod(lli base,lli exponent,lli mod=MOD)
{ 
	lli ans=1;
	while(exponent)
	{
		if(exponent&1) ans=(ans*base)%mod;
		base=(base*base)%mod;
		exponent>>=1;
	}
	return ans;
}






















































































































































































































































































































































































































































































































































































































	





























			








































































































































































































































int main() 
{
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	lli a,b,c,d,e,q,h,i,j,k,m,n,n1,n2,n3;
	lli t,tt;
	lli mod=MOD, inf=LLONG_MAX;


	srand(time(NULL));
	

	

	

	

	

	


	

	


	

	


	


	

	

	

	

	

	

	

	

	




	for(t=1,tt=1;tt<=t;tt++,newl)
	{
		cin>>n>>k;
		lli mx=3*(n+1);

		lli M=mx;


		lli fac[M+5];
		lli inv[M+5];
		fac[0]=1;
		inv[0]=1;
		
		forl(i,1,M+1)
		{
			fac[i]=fac[i-1]*i;
			fac[i]%=mod;

			

		}

		inv[M]=powmod(fac[M],mod-2);

		form(j,M,0)
		{
			inv[j-1]=(inv[j]*j)%mod;
		}



		lli ar[mx];
		ar[0]=n+1;
		ar[1]=3*((n*(n+1))/2);
		ar[1]%=mod;
		lli d3=powmod(3,mod-2);
		forl(i,2,3*n+1)
		{
			lli denom=inv[i+1]*inv[mx-i-1];
			denom%=mod;

			denom*=fac[mx];
			denom%=mod;

			lli sub=3*ar[i-1]+ar[i-2];
			sub%=mod;

			sub=(denom-sub+mod)%mod;
			sub*=d3;
			sub%=mod;

			ar[i]=sub;

		}

		forl(i,0,k)
		{
			cin>>a;
			cout<<ar[a];
			newl;
		}



	}	
}
