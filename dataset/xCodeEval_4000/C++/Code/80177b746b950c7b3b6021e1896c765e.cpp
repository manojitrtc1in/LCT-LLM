#include<bits/stdc++.h>

#define mm(a,b) memset(a,b,sizeof(a))
#define ACCELERATE (ios::sync_with_stdio(false),cin.tie(0))
#define pii pair<int,int>
#define pdd pair<double,double>
#define pll pair<long long,long long>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,a,b) for(int i=(a);i<=(b);i++)
#define per(i,a,b) for(int i=(a);i>=(b);i--)
#define rush() int T;scanf("%d",&T);while(T--)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define pf(a) printf("%d\n",a)
#define pf2(a,b) printf("%d %d\n",a,b)
#define pf3(a,b,c) printf("%d %d %d\n",a,b,c)
#define debug(x) cout<<#x<<": "<<x<<endl
#define all(x) (x).begin(),(x).end()
#define PI acos(-1.0)
#define E exp(1.0)
#define ll long long
#define ld long double
#define ull unsigned long long


using namespace std;

const int inf=0x3f3f3f3f;
const ll INF=0x3f3f3f3f3f3f3f3f;



char buf[1<<21],*p1=buf,*p2=buf;
inline int gc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}
inline int read(){
    int ret=0,f=0;char c=gc();
    while(!isdigit(c)){if(c=='-')f=1;c=gc();}
    while(isdigit(c)){ret=ret*10+c-48;c=gc();}
    if(f)return -ret;return ret;
}

struct node{
    void solve(){
        rush(){
        int n,k;
        cin>>n>>k;




































































































        string s;
        cin>>s;
        vector<pii > ans;
        int now=0;





































































































        for(int i=0;i<n;i++){
            if(now<k-1){
                if(i&1) {
                    if(s[i]==')') {
                        now++;continue;
                    }
                    else {





































































































                        for(int j=i+1;j<n;j++)
                        if(s[j]==')'){
                            ans.push_back({i,j});
                            reverse(s.begin()+i,s.begin()+j+1);
                            now++;
                            break;
                        }
                    }
                }





































































































                else {
                    if(s[i]=='(') continue;
                    else {
                        for(int j=i+1;j<n;j++)
                        if(s[j]=='('){
                            ans.push_back({i,j});
                            




































































































                            reverse(s.begin()+i,s.begin()+j+1);
                            break;
                        }
                    }
                }
                




































































































            }
            else {
                if(s[i]=='(') continue;
                else {
                    bool ok=0;
                    for(int j=i+1;j<n;j++){
                        if(s[j]=='(') {
                            ok=1;
                            




































































































                            ans.push_back({i,j});
                            reverse(s.begin()+i,s.begin()+j+1);
                            break;
                        }
                    }
                    




































































































                    if(!ok) break;
                }
            }
        }
        cout<<ans.size()<<endl;
        




































































































        for(auto i:ans)
            cout<<i.first+1<<' '<<i.second+1<<endl;
    }
    }
}P;

int main ()
{

    P.solve();
}

