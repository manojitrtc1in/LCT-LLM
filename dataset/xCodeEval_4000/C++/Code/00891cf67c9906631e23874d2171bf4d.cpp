#include <bits/stdc++.h>
using namespace std;

#define E 0.0000001

bool vis[201][201];

pair <int, int> jumps[] = {{0, 1},
{0, 2},
{0, 3},
{0, 4},
{0, 5},
{0, 6},
{0, 7},
{0, 8},
{0, 9},
{0, 10},
{0, 11},
{0, 12},
{0, 13},
{0, 14},
{0, 15},
{0, 16},
{0, 17},
{0, 18},
{0, 19},
{0, 20},
{0, 21},
{0, 22},
{0, 23},
{0, 24},
{0, 25},
{0, 26},
{0, 27},
{0, 28},
{0, 29},
{0, 30},
{0, 31},
{0, 32},
{0, 33},
{0, 34},
{0, 35},
{0, 36},
{0, 37},
{0, 38},
{0, 39},
{0, 40},
{0, 41},
{0, 42},
{0, 43},
{0, 44},
{0, 45},
{0, 46},
{0, 47},
{0, 48},
{0, 49},
{0, 50},
{0, 51},
{0, 52},
{0, 53},
{0, 54},
{0, 55},
{0, 56},
{0, 57},
{0, 58},
{0, 59},
{0, 60},
{0, 61},
{0, 62},
{0, 63},
{0, 64},
{0, 65},
{0, 66},
{0, 67},
{0, 68},
{0, 69},
{0, 70},
{0, 71},
{0, 72},
{0, 73},
{0, 74},
{0, 75},
{0, 76},
{0, 77},
{0, 78},
{0, 79},
{0, 80},
{0, 81},
{0, 82},
{0, 83},
{0, 84},
{0, 85},
{0, 86},
{0, 87},
{0, 88},
{0, 89},
{0, 90},
{0, 91},
{0, 92},
{0, 93},
{0, 94},
{0, 95},
{0, 96},
{0, 97},
{0, 98},
{0, 99},
{0, 100},
{0, 101},
{0, 102},
{0, 103},
{0, 104},
{0, 105},
{0, 106},
{0, 107},
{0, 108},
{0, 109},
{0, 110},
{0, 111},
{0, 112},
{0, 113},
{0, 114},
{0, 115},
{0, 116},
{0, 117},
{0, 118},
{0, 119},
{0, 120},
{0, 121},
{0, 122},
{0, 123},
{0, 124},
{0, 125},
{0, 126},
{0, 127},
{0, 128},
{0, 129},
{0, 130},
{0, 131},
{0, 132},
{0, 133},
{0, 134},
{0, 135},
{0, 136},
{0, 137},
{0, 138},
{0, 139},
{0, 140},
{0, 141},
{0, 142},
{0, 143},
{0, 144},
{0, 145},
{0, 146},
{0, 147},
{0, 148},
{0, 149},
{0, 150},
{0, 151},
{0, 152},
{0, 153},
{0, 154},
{0, 155},
{0, 156},
{0, 157},
{0, 158},
{0, 159},
{0, 160},
{0, 161},
{0, 162},
{0, 163},
{0, 164},
{0, 165},
{0, 166},
{0, 167},
{0, 168},
{0, 169},
{0, 170},
{0, 171},
{0, 172},
{0, 173},
{0, 174},
{0, 175},
{0, 176},
{0, 177},
{0, 178},
{0, 179},
{0, 180},
{0, 181},
{0, 182},
{0, 183},
{0, 184},
{0, 185},
{0, 186},
{0, 187},
{0, 188},
{0, 189},
{0, 190},
{0, 191},
{0, 192},
{0, 193},
{0, 194},
{0, 195},
{0, 196},
{0, 197},
{0, 198},
{0, 199},
{0, 200},
{1, 0},
{2, 0},
{3, 0},
{3, 4},
{4, 0},
{4, 3},
{5, 0},
{5, 12},
{6, 0},
{6, 8},
{7, 0},
{7, 24},
{8, 0},
{8, 6},
{8, 15},
{9, 0},
{9, 12},
{9, 40},
{10, 0},
{10, 24},
{11, 0},
{11, 60},
{12, 0},
{12, 5},
{12, 9},
{12, 16},
{12, 35},
{13, 0},
{13, 84},
{14, 0},
{14, 48},
{15, 0},
{15, 8},
{15, 20},
{15, 36},
{15, 112},
{16, 0},
{16, 12},
{16, 30},
{16, 63},
{17, 0},
{17, 144},
{18, 0},
{18, 24},
{18, 80},
{19, 0},
{19, 180},
{20, 0},
{20, 15},
{20, 21},
{20, 48},
{20, 99},
{21, 0},
{21, 20},
{21, 28},
{21, 72},
{22, 0},
{22, 120},
{23, 0},
{24, 0},
{24, 7},
{24, 10},
{24, 18},
{24, 32},
{24, 45},
{24, 70},
{24, 143},
{25, 0},
{25, 60},
{26, 0},
{26, 168},
{27, 0},
{27, 36},
{27, 120},
{28, 0},
{28, 21},
{28, 45},
{28, 96},
{28, 195},
{29, 0},
{30, 0},
{30, 16},
{30, 40},
{30, 72},
{31, 0},
{32, 0},
{32, 24},
{32, 60},
{32, 126},
{33, 0},
{33, 44},
{33, 56},
{33, 180},
{34, 0},
{35, 0},
{35, 12},
{35, 84},
{35, 120},
{36, 0},
{36, 15},
{36, 27},
{36, 48},
{36, 77},
{36, 105},
{36, 160},
{37, 0},
{38, 0},
{39, 0},
{39, 52},
{39, 80},
{40, 0},
{40, 9},
{40, 30},
{40, 42},
{40, 75},
{40, 96},
{40, 198},
{41, 0},
{42, 0},
{42, 40},
{42, 56},
{42, 144},
{43, 0},
{44, 0},
{44, 33},
{44, 117},
{45, 0},
{45, 24},
{45, 28},
{45, 60},
{45, 108},
{45, 200},
{46, 0},
{47, 0},
{48, 0},
{48, 14},
{48, 20},
{48, 36},
{48, 55},
{48, 64},
{48, 90},
{48, 140},
{48, 189},
{49, 0},
{49, 168},
{50, 0},
{50, 120},
{51, 0},
{51, 68},
{51, 140},
{52, 0},
{52, 39},
{52, 165},
{53, 0},
{54, 0},
{54, 72},
{55, 0},
{55, 48},
{55, 132},
{56, 0},
{56, 33},
{56, 42},
{56, 90},
{56, 105},
{56, 192},
{57, 0},
{57, 76},
{57, 176},
{58, 0},
{59, 0},
{60, 0},
{60, 11},
{60, 25},
{60, 32},
{60, 45},
{60, 63},
{60, 80},
{60, 91},
{60, 144},
{60, 175},
{61, 0},
{62, 0},
{63, 0},
{63, 16},
{63, 60},
{63, 84},
{64, 0},
{64, 48},
{64, 120},
{65, 0},
{65, 72},
{65, 156},
{66, 0},
{66, 88},
{66, 112},
{67, 0},
{68, 0},
{68, 51},
{69, 0},
{69, 92},
{70, 0},
{70, 24},
{70, 168},
{71, 0},
{72, 0},
{72, 21},
{72, 30},
{72, 54},
{72, 65},
{72, 96},
{72, 135},
{72, 154},
{73, 0},
{74, 0},
{75, 0},
{75, 40},
{75, 100},
{75, 180},
{76, 0},
{76, 57},
{77, 0},
{77, 36},
{78, 0},
{78, 104},
{78, 160},
{79, 0},
{80, 0},
{80, 18},
{80, 39},
{80, 60},
{80, 84},
{80, 150},
{80, 192},
{81, 0},
{81, 108},
{82, 0},
{83, 0},
{84, 0},
{84, 13},
{84, 35},
{84, 63},
{84, 80},
{84, 112},
{84, 135},
{84, 187},
{85, 0},
{85, 132},
{86, 0},
{87, 0},
{87, 116},
{88, 0},
{88, 66},
{88, 105},
{88, 165},
{89, 0},
{90, 0},
{90, 48},
{90, 56},
{90, 120},
{91, 0},
{91, 60},
{92, 0},
{92, 69},
{93, 0},
{93, 124},
{94, 0},
{95, 0},
{95, 168},
{96, 0},
{96, 28},
{96, 40},
{96, 72},
{96, 110},
{96, 128},
{96, 180},
{97, 0},
{98, 0},
{99, 0},
{99, 20},
{99, 132},
{99, 168},
{100, 0},
{100, 75},
{100, 105},
{101, 0},
{102, 0},
{102, 136},
{103, 0},
{104, 0},
{104, 78},
{104, 153},
{104, 195},
{105, 0},
{105, 36},
{105, 56},
{105, 88},
{105, 100},
{105, 140},
{106, 0},
{107, 0},
{108, 0},
{108, 45},
{108, 81},
{108, 144},
{109, 0},
{110, 0},
{110, 96},
{111, 0},
{111, 148},
{112, 0},
{112, 15},
{112, 66},
{112, 84},
{112, 180},
{113, 0},
{114, 0},
{114, 152},
{115, 0},
{116, 0},
{116, 87},
{117, 0},
{117, 44},
{117, 156},
{118, 0},
{119, 0},
{119, 120},
{120, 0},
{120, 22},
{120, 27},
{120, 35},
{120, 50},
{120, 64},
{120, 90},
{120, 119},
{120, 126},
{120, 160},
{120, 182},
{121, 0},
{122, 0},
{123, 0},
{123, 164},
{124, 0},
{124, 93},
{125, 0},
{126, 0},
{126, 32},
{126, 120},
{126, 168},
{127, 0},
{128, 0},
{128, 96},
{129, 0},
{129, 172},
{130, 0},
{130, 144},
{131, 0},
{132, 0},
{132, 55},
{132, 85},
{132, 99},
{132, 176},
{133, 0},
{133, 156},
{134, 0},
{135, 0},
{135, 72},
{135, 84},
{135, 180},
{136, 0},
{136, 102},
{137, 0},
{138, 0},
{138, 184},
{139, 0},
{140, 0},
{140, 48},
{140, 51},
{140, 105},
{140, 147},
{140, 171},
{141, 0},
{141, 188},
{142, 0},
{143, 0},
{143, 24},
{144, 0},
{144, 17},
{144, 42},
{144, 60},
{144, 108},
{144, 130},
{144, 165},
{144, 192},
{145, 0},
{146, 0},
{147, 0},
{147, 140},
{147, 196},
{148, 0},
{148, 111},
{149, 0},
{150, 0},
{150, 80},
{150, 200},
{151, 0},
{152, 0},
{152, 114},
{153, 0},
{153, 104},
{154, 0},
{154, 72},
{155, 0},
{156, 0},
{156, 65},
{156, 117},
{156, 133},
{157, 0},
{158, 0},
{159, 0},
{160, 0},
{160, 36},
{160, 78},
{160, 120},
{160, 168},
{161, 0},
{162, 0},
{163, 0},
{164, 0},
{164, 123},
{165, 0},
{165, 52},
{165, 88},
{165, 144},
{166, 0},
{167, 0},
{168, 0},
{168, 26},
{168, 49},
{168, 70},
{168, 95},
{168, 99},
{168, 126},
{168, 160},
{169, 0},
{170, 0},
{171, 0},
{171, 140},
{172, 0},
{172, 129},
{173, 0},
{174, 0},
{175, 0},
{175, 60},
{176, 0},
{176, 57},
{176, 132},
{177, 0},
{178, 0},
{179, 0},
{180, 0},
{180, 19},
{180, 33},
{180, 75},
{180, 96},
{180, 112},
{180, 135},
{180, 189},
{181, 0},
{182, 0},
{182, 120},
{183, 0},
{184, 0},
{184, 138},
{185, 0},
{186, 0},
{187, 0},
{187, 84},
{188, 0},
{188, 141},
{189, 0},
{189, 48},
{189, 180},
{190, 0},
{191, 0},
{192, 0},
{192, 56},
{192, 80},
{192, 144},
{193, 0},
{194, 0},
{195, 0},
{195, 28},
{195, 104},
{196, 0},
{196, 147},
{197, 0},
{198, 0},
{198, 40},
{199, 0},
{200, 0},
{200, 45},
{200, 150}
};

bool can_jump(int x1, int y1, int x2, int y2) {
    float d = sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    return d - (int)d < E;
}

int bfs(int x, int y) {
    queue <pair <int, int>> q;
    q.push({100, 100});
    int it = 0;
    while(!q.empty()) {
        it++;
        int n = q.size();
        for (int i = 0; i < n; i++) {
            pair <int, int> node = q.front();
            q.pop();
            
            for (pair <int, int> jump : jumps) {
                int nx = node.first + jump.first;
                int ny = node.second + jump.second;
                if (nx >= 0 && nx <= 200 && ny >= 0 && nx <= 200) {

                    if (!vis[nx][ny]) {
                        if (nx == x && ny == y) return it;
                        vis[nx][ny] = true;
                        q.push({nx, ny});
                    }
                }
            }
        }
    }
    return -1;
}

void solve() {
    memset(vis, 0, sizeof(vis));
    int y, x;
    cin >> x >> y;
    if (x == 0 && y == 0) {
        cout << 0 << endl;
        return;
    }
    x += 100;
    y += 100;

    int res = bfs(x, y);
    cout << res << endl;
}

int main () {
    int t;
    cin >> t;
    while(t--) solve();
}