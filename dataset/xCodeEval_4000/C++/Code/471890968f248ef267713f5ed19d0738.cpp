

























  




  




 










  






  
















 




















  


























  




























  








  








































































  





































































































































































































































































































































































































































































































































































































































































































































































































































































































#include <cstdio>
#include <cstring>
#include <cmath>
#include <cctype>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <stack>
#include <queue>

typedef long long LL;
using namespace std;

char s[1000005];
bool vis[35];
int dp[1 << 22];

int main()
{
    

    


    scanf("%s", s);
    int len = strlen(s);
    for (int i = 0; i < len; i++){
        memset(vis, 0, sizeof(vis));
        int mask = 0;
        for (int j = 0; j + i < len; j++){
            if(vis[s[i + j] - 'a']) break;
            vis[s[i + j] - 'a'] = true;
            mask |= 1 << (s[i + j] - 'a');
            dp[mask] = __builtin_popcount(mask);
        }
    }
    int tot = 1 << 20;
    for (int i = 0; i < tot; i++){
        for (int j = 0; j < 20; j++){
            if((1 << j) & i){
                dp[i] = max(dp[i], dp[i ^ (1 << j)]);
            }
        }
    }
    int ans = 0;
    for (int i = 0; i < tot; i++){
        if(dp[i] == __builtin_popcount(i)){
            int t = ~i & (tot - 1);
            ans = max(ans, dp[i] + dp[t]);
        }
    }
    printf("%d\n", ans);

    return 0;
}

