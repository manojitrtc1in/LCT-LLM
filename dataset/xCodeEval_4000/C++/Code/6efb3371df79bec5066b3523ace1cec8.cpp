

















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#include<cstdio>
#include<cstring>
#include<iostream>
#include<queue>
#include<vector>
#include<cmath>
#include<algorithm>
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rep2(i,a,b) for(int i=a;i>=b;i--)
typedef long long ll;
using namespace std;
const int N = 5e5 + 10;
const int mod = 1e9 + 7;
const ll INF = 1ll << 62 - 1ll;
const int inf = 1 << 31 - 1;
int n, a[N], q, ans[N], p[65], po[65];
struct node
{
	int l, r, id;
	bool operator <(const node& a)
	{
		return r < a.r;
	}
}xw[N];
void read(int& x) {
	x = 0; char c = getchar();
	while (c > '9' || c < '0') c = getchar();
	while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();
}
void build(int x, int pos)
{
	for (int j = 62;j >= 0;j--) {
		if (!(x >> j)) continue;

		if (!p[j]) {
			p[j] = x;po[j] = pos; break;
		}

		else if (po[j] < pos) {
			swap(p[j], x);
			swap(po[j], pos);
		}
		x ^= p[j];
	}
}
void ques(int nl, int id)
{
	for (int i = 62;i >= 0;i--)
		if ((ans[id] ^ p[i]) > ans[id] && po[i] >= nl)
			ans[id] = ans[id] ^ p[i];

}
int main()
{

	

	int nr = 0;
	read(n);
	rep(i, 1, n)read(a[i]);
	read(q);
	rep(i, 1, q)read(xw[i].l), read(xw[i].r), xw[i].id = i;
	sort(xw + 1, xw + q + 1);
	rep(i, 1, q)
	{
		while (nr < xw[i].r && nr < n)
		{
			nr++;
			build(a[nr], nr);
		}
		ques(xw[i].l, xw[i].id);
	}
	rep(i, 1, q)
		printf("%d\n", ans[i]);
}




























































































































































































































