



#include<bits/extc++.h>
#include<bits/stdc++.h>
using namespace std;
#define file(s) freopen(#s".in","r",stdin),freopen(#s".out","w",stdout)
#define neinf 0xc0c0c0c0c0c0c0c0ll
#define inf 0x3f3f3f3f3f3f3f3fll
#define uint unsigned int
#define ull unsigned ll
#define pr pair<ll,ll>
#define prpr make_pair


#define HgS 998244353
#define ll long long
#define opr operator
#define pb push_back
#define gc getchar
#define pc putchar
#define ret return
#define sec second
#define fir first
#define cst const
#define db double
#define il inline
il ll rd()
{
	ll res=0,lab=1;
	char ch=gc();
	while((ch<'0'||ch>'9')&&ch!=EOF)lab^=(ch=='-'),ch=gc();
	while(ch>='0'&&ch<='9')res=(res<<3)+(res<<1)+(ch&15),ch=gc();
	ret lab?res:-res;
}
il db rdf()
{
	db res=0,g=1;int lab=1;char ch=gc();
	while((ch<'0'||ch>'9')&&ch!=EOF)lab^=(ch=='-'),ch=gc();
	while(ch>='0'&&ch<='9')res=res*10+(ch&15),ch=gc();
	if(ch=='.')
	{
		ch=gc();
		while(ch>='0'&&ch<='9')g*=0.1,res+=g*(ch&15),ch=gc();
	}
	ret lab?res:-res;
}
il void prt(ll x,char t='\n')
{
	static char ch[70];int tp=0;
	if(!x){fputs("0",stdout);if(t)pc(t);ret;}
	if(x<0)pc('-'),x=-x;
	while(x)ch[++tp]=(x%10)^48,x/=10;
	while(tp)pc(ch[tp--]);
	if(t)pc(t);
}
il db degree(cst db&x,cst db&y){return (!x&&!y)?0:atan2(y,x);}
template<class T=ll,class T2=ll>il void pls(T &x,cst T2&y){x+=y;if(x>=HgS)x-=HgS;}
template<class T=ll,class T2=ll>il void sub(T &x,cst T2&y){x-=y;if(x<0)x+=HgS;}
template<class T=ll>T gcd(cst T&a,cst T&b){ret b?gcd(b,a%b):a;}
template<class T=ll,class T2=ll>il T tomax(T&a,cst T2&b){ret a>b?a:(a=b);}
template<class T=ll,class T2=ll>il T tomin(T&a,cst T2&b){ret a<b?a:(a=b);}
#if __cplusplus<201400L
#define umax max
#define umin min
#else
template<class T=ll>il T umax(T a){ret a;}
template<class T=ll>il T umin(T a){ret a;}
template<class T=ll,class T2=ll>il auto umax(T a,T2 b){ret a>b?a:b;}
template<class T=ll,class T2=ll>il auto umin(T a,T2 b){ret a<b?a:b;}
template<class T=ll,class... A>T umax(T a,A... ar){ret umax(a,umax(ar...));}
template<class T=ll,class... A>T umin(T a,A... ar){ret umin(a,umin(ar...));}
#endif
template<class T=ll>il T uabs(cst T&x){ret x>0?x:-x;}
template<class T=ll>il T sqr(cst T&x){ret x*x;}
template<class T=ll>il void clr(T&x){memset(x,0,sizeof(x));}
template<class T=ll>il void clr(T*x,int len){memset(x,0,sizeof(T)*len);}
template<class T=ll>il void cpy(T*x,T*y,int len){memcpy(x,y,sizeof(T)*len);}
il ll qpow(ll n,ll e=HgS-2,cst ll&p=HgS)
{n%=p;ll res=1;while(e){if(e&1)res=res*n%p;n=n*n%p;e>>=1;}ret res;}
cst int tb[12][12][24]={
{{}},
{
{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24},
{0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46},
{0,0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66},
{0,0,1,6,11,16,21,26,31,36,41,46,51,56,61,66,71,76,81,86,91,96,101,106},
{0,0,0,2,9,16,23,30,37,44,51,58,65,72,79,86,93,100,107,114,121,128,135,142},
{0,0,0,2,7,18,29,40,51,62,73,84,95,106,117,128,139,150,161,172,183,194,205,216},
{0,0,0,0,4,12,27,42,57,72,87,102,117,132,147,162,177,192,207,222,237,252,267,282},
{0,0,0,0,3,12,26,48,70,92,114,136,158,180,202,224,246,268,290,312,334,356,378,400},
{0,0,0,0,1,8,23,44,74,104,134,164,194,224,254,284,314,344,374,404,434,464,494,524},
{0,0,0,0,0,6,21,46,78,120,162,204,246,288,330,372,414,456,498,540,582,624,666,708},
{0,0,0,0,0,2,15,40,77,122,178,234,290,346,402,458,514,570,626,682,738,794,850,906}
},
{
{0,1,3,6,10,15,21,28,36,45,55,66,78,91,105,120,136,153,171,190,210,231,253},
{1,3,9,19,33,51,73,99,129,163,201,243,289,339,393,451,513,579,649,723,801,883,969},
{0,4,12,30,58,96,144,202,270,348,436,534,642,760,888,1026,1174,1332,1500,1678,1866,2064,2272},
{0,3,18,45,94,165,258,373,510,669,850,1053,1278,1525,1794,2085,2398,2733,3090,3469,3870,4293,4738},
{0,0,12,52,120,231,385,582,822,1105,1431,1800,2212,2667,3165,3706,4290,4917,5587,6300,7056,7855,8697},
{0,0,9,53,156,318,560,882,1284,1766,2328,2970,3692,4494,5376,6338,7380,8502,9704,10986,12348,13790,15312},
{0,0,3,41,159,390,734,1219,1845,2612,3520,4569,5759,7090,8562,10175,11929,13824,15860,18037,20355,22814,25414},
{0,0,0,30,155,441,931,1625,2559,3733,5147,6801,8695,10829,13203,15817,18671,21765,25099,28673,32487,36541,40835},
{0,0,0,17,135,462,1087,2064,3393,5119,7242,9762,12679,15993,19704,23812,28317,33219,38518,44214,50307,56797,63684},
{0,0,0,8,110,462,1219,2495,4356,6802,9888,13614,17980,22986,28632,34918,41844,49410,57616,66462,75948,86074,96840}
},
{
{0,0,1,4,10,20,35,56,84,120,165,220,286,364,455,560,680,816,969,1140,1330,1540},
{0,2,8,24,56,110,192,308,464,666,920,1232,1608,2054,2576,3180,3872,4658,5544,6536,7640,8862},
{0,2,17,56,140,290,527,872,1346,1970,2765,3752,4952,6386,8075,10040,12302,14882,17801,21080,24740,28802},
{1,6,30,112,291,626,1176,2000,3157,4706,6706,9216,12295,16002,20396,25536,31481,38290,46022,54736,64491,75346},
{0,6,41,164,484,1110,2186,3856,6264,9554,13870,19356,26156,34414,44274,55880,69376,84906,102614,122644,145140,170246},
{0,6,53,236,730,1800,3711,6784,11340,17700,26185,37116,50814,67600,87795,111720,139696,172044,209085,251140,298530,351576},
{0,4,52,292,1012,2650,5791,11020,19006,30418,45925,66196,91900,123706,162283,208300,262426,325330,397681,480148,573400,678106},
{0,0,45,320,1283,3660,8430,16796,29961,49248,75980,111480,157071,214076,283818,367620,466805,582696,716616,869888,1043835,1239780},
{0,0,30,320,1503,4750,11687,24336,45043,76154,120180,179632,257021,354858,475654,621920,796167,1000906,1238648,1511904,1823185,2175002}
},
{
{0,0,0,1,5,15,35,70,126,210,330,495,715,1001,1365,1820,2380,3060,3876,4845,5985},
{0,0,3,15,50,130,285,553,980,1620,2535,3795,5478,7670,10465,13965,18280,23528,29835,37335,46170},
{0,1,9,51,175,465,1041,2059,3711,6225,9865,14931,21759,30721,42225,56715,74671,96609,123081,154675,192015},
{0,3,27,129,455,1240,2843,5747,10559,18010,28955,44373,65367,93164,129115,174695,231503,301262,385819,487145,607335},
{0,4,48,260,940,2680,6364,13238,24910,43350,70890,110224,164408,236860,331360,452050,603434,790378,1018110,1292220,1618660},
{0,7,74,437,1705,5060,12502,26849,51863,92250,153660,242687,366869,534688,755570,1039885,1398947,1845014,2391288,3051915,3841985},
{1,9,110,673,2790,8741,22414,49753,98758,179695,305096,489759,750748,1107393,1581290,2196301,2978554,3956443,5160628,6624035,8381856},
{0,11,135,938,4165,13825,37157,85414,174619,325565,564145,921352,1433279,2141119,3091165,4334810,5928547,7933969,10417769,13451740,17112775}
},
{
{0,0,0,0,1,6,21,56,126,252,462,792,1287,2002,3003,4368,6188,8568,11628,15504},
{0,0,0,4,24,90,260,630,1344,2604,4680,7920,12760,19734,29484,42770,60480,83640,113424,151164},
{0,0,3,24,124,444,1260,3038,6489,12624,22809,38820,62898,97804,146874,214074,304055,422208,574719,768624},
{0,0,9,84,409,1464,4194,10234,22134,43584,79639,136944,223959,351184,531384,779814,1114444,1556184,2129109,2860684},
{0,2,27,214,1064,3834,11176,27776,61119,122254,226559,394506,652426,1033274,1577394,2333284,3358361,4719726,6494929,8772734},
{0,2,54,440,2255,8460,25357,64624,145350,296322,558312,986364,1652081,2645912,4079439,6087664,8831296,12499038,17309874,23515356},
{0,6,99,830,4339,16734,51730,135268,311268,647382,1241209,2226510,3779423,6124678,9541812,14371384,21021190,29972478,41786163,57109042}
},
{
{0,0,0,0,0,1,7,28,84,210,462,924,1716,3003,5005,8008,12376,18564,27132},
{0,0,0,0,5,35,147,469,1246,2898,6090,11814,21483,37037,61061,96915,148876,222292,323748},
{0,0,0,6,50,260,980,2968,7672,17584,36672,70890,128766,222068,366548,582764,896980,1342144,1958944},
{0,0,1,26,220,1089,4025,12117,31332,72066,151065,293716,536708,931063,1545537,2470391,3821532,5745024,8421969},
{0,0,8,102,722,3489,12803,38668,100744,233836,494820,971006,1789938,3130631,5236245,8428196,13121704,19842778,29246638},
{0,0,17,260,1862,9030,33663,103222,272986,642694,1378035,2736986,5100998,9011030,15208431,24680670,38711914,58938454,87408979}
},
{
{0,0,0,0,0,0,1,8,36,120,330,792,1716,3432,6435,11440,19448,31824},
{0,0,0,0,0,6,48,224,784,2268,5712,12936,26928,52338,96096,168168,282464,457912},
{0,0,0,0,10,90,489,1952,6300,17388,42546,94608,194634,375430,685971,1196832,2006732,3250296},
{0,0,0,4,65,510,2568,9848,31114,84924,206700,458796,944131,1823954,3340308,5843760,9826964,15964624},
{0,0,0,24,300,2050,9890,37232,116836,318660,777486,1732800,3583404,6959238,12812890,22533272,38083940,62168536}
},
{
{0,0,0,0,0,0,0,1,9,45,165,495,1287,3003,6435,12870,24310},
{0,0,0,0,0,0,7,63,324,1236,3870,10494,25476,56628,117117,228085,422136},
{0,0,0,0,0,15,147,847,3591,12330,36210,94194,222354,484737,988845,1906905,3504241},
{0,0,0,0,10,141,1071,5515,21987,72801,209082,536382,1255320,2722489,5537697,10664433,19591273}
},
{
{0,0,0,0,0,0,0,0,1,10,55,220,715,2002,5005,11440},
{0,0,0,0,0,0,0,8,80,450,1860,6270,18216,47190,111540,244530},
{0,0,0,0,0,0,21,224,1376,6200,22605,70422,194073,484572,1115400,2398110}
},
{
{0,0,0,0,0,0,0,0,0,1,11,66,286,1001,3003},
{0,0,0,0,0,0,0,0,9,99,605,2695,9735,30173,83083}
},
{
{0,0,0,0,0,0,0,0,0,0,1,12,78,364}
}};
ll T;
int main()
{
	T=rd();
	while(T --> 0)
	{
		ll n=rd(),k=rd(),x=rd();
		if(n<=x||k<x){puts("0");continue;}
		if(n<=25){prt(tb[x][k-x][n-x-1]);continue;}
		int res=0;
		for(int i=k;i<=25;++i)
		{
			int p1=tb[x][k-x][i-x-1],p2=1;
			for(int j=k;j<=25;++j)
				if(i^j)p1=1ll*p1*(n-j)%HgS,p2=1ll*p2*(i-j)%HgS;
			p1=1ll*(HgS+p1)*qpow(HgS+p2)%HgS;pls(res,p1);
		}
		prt(res);
	}
	ret 0;
}