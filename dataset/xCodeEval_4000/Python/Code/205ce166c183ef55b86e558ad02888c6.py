from sys import stdin
from collections import deque

mod = 10**9 + 7
import sys
import random

from queue import PriorityQueue
from collections import Counter as cc


from bisect import bisect_right
from bisect import bisect_left
from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil



import heapq

input = lambda : sys.stdin.readline().rstrip()
from sys import stdin, stdout
from heapq import heapify, heappush, heappop
from itertools import permutations
from math import factorial as f



def ncr(n, r, p):
    num = den = 1
    for i in range(r):
        num = (num * (n - i)) % p
        den = (den * (i + 1)) % p
    return (num * pow(den,
                      p - 2, p)) % p

import sys






































































































































































































































































































































































































































































































































































































































































































































































































































































































































        









































































































n,m = map(int,input().split())
l = list(map(int,input().split()))
l.sort()


pref = [0]
for i in range(n):
    pref.append(l[i]+pref[-1])

dp = [0]*(n+1)
ans = []

for i in range(1,n+1):
    if i<=m:
        ans.append(pref[i])
        dp[i] = pref[i]
    else:

        z1 = (pref[i] - pref[i-m])
        
        ans.append(z1 + dp[i-m] + pref[i-m])
        dp[i] = z1 + dp[i-m] + pref[i-m]

print(*ans)




