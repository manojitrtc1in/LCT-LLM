from sys import stdin
from collections import deque

mod = 10**9 + 7
import sys
import random

from queue import PriorityQueue
from collections import Counter as cc


from bisect import bisect_right
from bisect import bisect_left
from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil



import heapq

input = lambda : sys.stdin.readline().rstrip()
from sys import stdin, stdout
from heapq import heapify, heappush, heappop
from itertools import permutations
from math import factorial as f



def ncr(n, r, p):
    num = den = 1
    for i in range(r):
        num = (num * (n - i)) % p
        den = (den * (i + 1)) % p
    return (num * pow(den,
                      p - 2, p)) % p

import sys















































































































































































































































































































































































































































































































































































































































































































































t = int(input())

def solve(start,end,c):
    ans = 0
    if start == end:
        if s[start-1]!=chr(c):
            return 1
        else:
            return 0


    mid = (start+end)//2
    z1 = pref1[c-97][mid] - pref1[c-97][start-1]
    z2 = pref1[c-97][end] - pref1[c-97][mid]




    
    ans+=min(end-mid - z2 + solve(start,mid,c+1),mid-start+1 - z1+solve(mid+1,end,c+1))

    return ans














for _ in range(t):

    n = int(input())
    s = input()

    pref1 = []
    ans = 0
    if len(s) == 1:
        if s[0]!='a':
            print(1)
        else:
            print(0)
        continue
    for i in range(26):
        pref1.append([0])

    for i in range(26):
        for j in range(1,n+1):
            if s[j-1] == chr(i+97):
                
                pref1[i].append(pref1[i][-1]+1)
            else:
                pref1[i].append(pref1[i][-1])


    start = 1
    end = n
    c = 97




    ans = solve(start,end,c)
    print(ans)






















































































































































































        





















































