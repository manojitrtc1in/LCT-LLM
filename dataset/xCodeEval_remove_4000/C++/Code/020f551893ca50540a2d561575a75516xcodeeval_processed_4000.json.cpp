








































































































































































































































































































































































































































using namespace std;
namespace IO{
  char ibuf[iL],*iS=ibuf+iL,*iT=ibuf+iL,Out[iL],*iter=Out;
  TEM Readneg(re T &x){re char c;re bool f;for(f=false,c=getchar();!isdigit(c);f|=c=='-',c=getchar());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=getchar());if(f)x=~x+1;}
  TEM readneg(re T &x){re char c;re bool f;for(f=false,c=gc();!isdigit(c);f|=c=='-',c=gc());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=gc());if(f)x=~x+1;}
  TEM id0(re T x){if(x<0)*iter++='-',x=~x+1;re T c[35],l;for(l=0;!l || x;c[l]=x%10,++l,x/=10);for(;l;--l,*iter++=c[l]+'0');flush();}
  TEM Read(re T &x){re char c;for(c=getchar();!isdigit(c);c=getchar());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=getchar());}
  TEM read(re T &x){re char c;for(c=gc();!isdigit(c);c=gc());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=gc());}
  TEM write(re T x){re T c[35],l;for(l=0;!l||x;c[l++]=x%10,x/=10);for(;l;*iter++=c[--l]+'0');flush();}
}
using namespace IO;





















struct Edge{int next,to;}E[MAXN];int head[MAXN],cnt;
il void AddE(int x,int y){E[++cnt].next=head[x],E[cnt].to=y,head[x]=cnt;}
int lg[MAXN],n,QQ,val[MAXN],tot[MAXN];
struct Node{int l,k,id;};vector<Node>Q[MAXN];int Ans[MAXN];
vector<int>ST[MAXN];int sum[MAXN];
il void Add(int x,int w){for(;x<=n;sum[x]+=w,x+=lowbit(x));}
il int Qry(int x){re int ans=0;for(;x;ans+=sum[x],x^=lowbit(x));return ans;}
void DFS(int x){
  re int &S=tot[val[x]];
  if(S<=n)Add(S,-1);Add(--S,1),ST[S].emplace_back(val[x]);
  for(re int t=0;t<Q[x].size();++t){
    re int id=Q[x][t].id,r=n-Q[x][t].l+1,k=Qry(r)-Q[x][t].k+1;
    if(k<1){Ans[id]=-1;continue;}re int C=0;
    for(re int i=lg[r];~i;--i)if((C|1<<i)<=r&&k>sum[C|1<<i])k-=sum[C|=1<<i];
    for(++C;tot[ST[C].back()]^C;ST[C].pop_back());Ans[id]=ST[C].back();
  }
  for(re int i=head[x];i;i=E[i].next)DFS(E[i].to);
  Add(S,-1);if(++S<=n)Add(S,1),ST[S].emplace_back(val[x]);
}
il void WORK(){
  read(n),read(QQ),cnt=0;
  for(re int i=1;i<=n;++i)head[i]=0,Q[i].resize(0),ST[i].resize(0),tot[i]=n+1;
  for(re int i=1;i<=n;++i)read(val[i]);
  for(re int i=2,x;i<=n;++i)read(x),AddE(x,i);
  for(re int i=1,x,l,k;i<=QQ;++i)read(x),read(l),read(k),Q[x].emplace_back(Node{l,k,i});
  DFS(1);for(re int i=1;i<=QQ;++i)Writeneg(Ans[i],' ');*iter++='\n';
}
int main(){
  for(re int i=2;i<MAXN;++i)lg[i]=lg[i>>1]+1;
  re int T=1;read(T);
  for(re int i=0;i<T;++i)WORK();
  return 0;
}