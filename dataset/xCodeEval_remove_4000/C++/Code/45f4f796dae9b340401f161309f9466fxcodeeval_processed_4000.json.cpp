




























































































using namespace std;

































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;
const ll highest = 1e18;    
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   



















































































































































const int N = 1010;
int n;
char s[N];
int c[256];
bool f[N];
int main(){
    scanf("%d",&n);
    scanf("%s",s);
    n = strlen(s);
    for(int i=0;i<n;++i){
        c[s[i]]++;
    }
    int k = 0;
    for(int i=0;i<256;++i){
        if(c[i] > c[k])k = i;
    }
    memset(f,1,sizeof(f));
    for(int i=2;i*i<=n;++i){
        if(f[i]){
            for(int j=i*i;j<=n;j+=i){
                f[j] = false;
            }
        }
    }
    f[1] = 1;
    for(int i=2;i+i<=n;++i){
        f[i] = false;
    }
    for(int i=1;i<=n;++i){
        if(!f[i]){
            if(c[k]==0){
                return !printf("NO\n");
            }
            c[s[i-1]=k]--;
        }
    }
    k = 0;
    for(int i=1;i<=n;++i){
        if(f[i]){
            while(c[k]==0)k++;
            c[s[i-1]=k]--;
        }
    }
    puts("YES");
    puts(s);    
    return 0;
}



























































































































































































































        












        








 



































        































































































































































































































































































































































































































































