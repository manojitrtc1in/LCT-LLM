


















    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL);











    SORT(v);      \
    v.erase(unique(v.begin(), v.end()), v.end())













    int tc;     \
    cin >> tc;  \
    fo(t, 1, tc)

    ll n;          \
    cin >> n;      \
    vLL v(n);      \
    fo(i, 0, n - 1) cin >> v[i];

    ll n;      \
    cin >> n;

    string s;     \
    cin >> s;






    auto stop = high_resolution_clock::now(); \
    auto duration = duration_cast<microseconds>(stop - start);

    line;    \
    line;    \
    cout << "Time taken by function: " << duration.count() / 1e6 << " seconds" << endl;











using namespace std;


















































































































































































































































































































































































































































































































































































































































using namespace std;

int main()
{
    ll m, n;
    cin >> n;
    while (n--)
    {
        cin >> m;
        vector<int> v;
        vector<int> v1;
        char n1[m][m];
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < m; j++)
                cin >> n1[i][j];
        }
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < m; j++)
            {
                if (n1[i][j] == '*')
                {
                    v.pb(i);
                    v1.pb(j);
                }
            }
        }
        if (v[0]==v[1])
		v[1]=v[0]==0;
	if (v1[0]==v1[1])
		v1[1]=v1[0]==0;
        for (auto i : v)
        {
            for (auto j : v1)
                n1[i][j] = '*';
        }
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < m; j++)
                cout << n1[i][j];
        cout << endl;
        }
    }
    return 0;
}






















































































































































































































































































