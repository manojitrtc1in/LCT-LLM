






































































































































































































































































































































































































































































































































































































































































































































 




 




 





























































































 



































































































































































































































































































































































































































































































































































































































































































typedef long long LL;
using namespace std;

int n, B, a[5005], b[5005], sz[5005], head[5005], tot;
LL dp[5005][5005][2];

struct node
{
	int v, next;
}e[5005];

void dfs(int x, int pre){
	sz[x] = 1;
	dp[x][0][0] = 0, dp[x][1][0] = a[x], dp[x][1][1] = a[x] - b[x];
	for (int i = head[x]; i != -1; i = e[i].next){
		int v = e[i].v;
		if(v == pre) continue;
		dfs(v, x);
		for (int j = sz[x]; j >= 0; j--){
			for (int k = 0; k <= sz[v]; k++){
				dp[x][j + k][0] = min(dp[x][j + k][0], dp[x][j][0] + dp[v][k][0]);
				dp[x][j + k][1] = min(dp[x][j + k][1], min(dp[x][j][1] + dp[v][k][0], dp[x][j][1] + dp[v][k][1]));
			}
		}
		sz[x] += sz[v];
	}
}

int main()
{
	

	


	memset(head, -1, sizeof(head));
	scanf("%d %d", &n, &B);
	for (int i = 1; i <= n; i++) for (int j = 0; j <= n; j++) dp[i][j][0] = dp[i][j][1] = 1LL << 60;
	for (int i = 1, x; i <= n; i++){
		if(i == 1){
			scanf("%d %d", &a[i], &b[i]);
		}else{
			scanf("%d %d %d", &a[i], &b[i], &x);
			e[tot] = node{i, head[x]}, head[x] = tot++;
		}
	}
	dfs(1, -1);
	int ans = 0;
	for (int i = n; i >= 0; i--){
		if(dp[1][i][0] <= B || dp[1][i][1] <= B) {ans = i; break;}
	}
	printf("%d\n", ans);

	return 0;
}
