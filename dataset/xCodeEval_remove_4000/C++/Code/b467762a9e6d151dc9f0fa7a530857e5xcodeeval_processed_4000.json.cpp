



using namespace std;

typedef long long ll;


int _;

























































































































































































































































































































	

	

	

		

	



















  

  





  

  

  

    

    

    

    

  

  

    

    

    

          

    



    



    

    

    

    

  

  

  

  

  

  

  

















































































































































const int N = 200010;
int n;
int p[N];
ll l[N], r[N];
vector<int> adj[N];
int ans = 0; 

void dfs(int u){
	if(adj[u].size() == 0){
		ans++;
		return ;
	}
	ll tmp = 0;
	for(auto v : adj[u]){
		dfs(v);
		tmp += r[v];
	}
	if(l[u] > tmp){
		ans++;
	}
	else
		r[u] = min(r[u], tmp);
}

void solve(){
    cin >> n;
    for(int i = 0 ; i <= n + 1; i++){
    	adj[i].clear();
	}
	for(int i = 2; i <= n; i++){
		cin >> p[i];
		adj[p[i]].push_back(i);
	}
	for(int i = 1; i <= n; i++){
		cin >> l[i] >> r[i];
	}
	ans = 0;
	dfs(1);
	cout << ans << "\n";
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    cin >> _;
    while(_--)
    	solve();
    return 0;
}