


















 












 




































 























using namespace std;
































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    




const double pi = acos(-1);
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   


const int mod = 1e9+7;
const int ini = -1e9;
const int inf = 1e9;

double p[20][20];
double dp[(1<<20)][20];
int n,m;
double solve(int n,int mask){
	if(mask == (1<<m)-1){
		if(n==0)return 1;
		return 0;
	}	
	if(fabs(dp[mask][n]+1)>0.1){
		return dp[mask][n];
	}
	double ans = -1;
	for(int i=0;i<m;++i){
		if(!(mask & (1<<i))){
			ans = max(ans,p[i][n]*solve(i,mask+(1<<i)) + p[n][i]*solve(n,mask+(1<<i)));
		}
	}
	return dp[mask][n] = ans;
}
int main(){
	int n;scanf("%d",&n);
	m = n;
	for(int i=0;i<n;++i){
		for(int j=0;j<n;++j){
			scanf("%lf",&p[i][j]);
		}
	}
	for(int i=0;i<=18;++i){
		for(int j=0;j<(1<<18);++j){
			dp[j][i] = -1;
		}
	}
	double ans = -1;
	for(int i=0;i<n;++i){
		ans = max(ans,solve(i,(1<<i)));
	}
	printf("%.9lf\n", ans);
	return 0;
}






 






 






 






 




















 






 
























 


































 


























 










 












 






















 












 








 


        












        








 




















 














        






 






 






 




















 










 
















 
























 




















 






























 












 






 










 










 












 












 


































 












 
















 












































 


 


















 










 




 








 










 
















 















































