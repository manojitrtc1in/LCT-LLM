







using namespace std;

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































int max_h, max_m,hh,mm;
int a, b, c, d;
int Find;
string ime;
bool can(int n) {
	if (n != 1 && n != 2 && n != 5 && n != 8 && n != 0)return false;
	return true;
}
int ref(int n) {
	if (n == 2)return 5;
	if (n == 1)return 1;
	if (n == 0)return 0;
	if (n == 8)return 8;
	if (n == 5)return 2;
}
bool can_opt(int i,int j){
	a = i / 10, b = i % 10, c = j / 10, d = j % 10;
	int q, w, e, r;
	if (can(a) && can(b) && can(c) && can(d)) {
		q = ref(a), w = ref(b), e = ref(c), r = ref(d);
		if (r * 10 + e < max_h && w * 10 + q < max_m) {
			Find = 1;
			cout << setw(2) << setfill('0') << i << ':' << setw(2) << setfill('0') << j << endl;
			return true;
		}
	}
	return false;
}
int main() {
	int T;
	cin >> T;
	while (T--) {
	    Find = 0;
		cin >> max_h >> max_m;
		cin >> ime;
		a = ime[0] - 48, b = ime[1] - 48, c = ime[3] - 48, d = ime[4] - 48;
		hh = a * 10 + b, mm = c * 10 + d;
		int jinwei = 0;
		for (int i = hh; i < max_h; i++) {
			int j;
			if (!jinwei)j = mm;
			else j = 0;
			for (; j < max_m; j++) {
				can_opt(i, j);
				if (Find)break;
			}
			if (Find)break;
			if (!jinwei)jinwei = 1;
			if (i + 1 == max_h)i = -1;
		}
	}

}