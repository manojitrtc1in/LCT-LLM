




























































































using namespace std;
































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    




const double pi = acos(-1);
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   
const ll inf = 1e18;
const int mod = 1e9+7;  
const int ini = -1e9;

const int N = 1e6+100;




int n;
int main(){
	scanf("%d",&n);
	std::vector<int> freq(1<<20);
	for(int i=0;i<n;++i){
		int x;
		scanf("%d",&x);
		freq[x]++;
	}
	

	for(int p=0;p<20;++p){
		

		

		for(int mask=0;mask<(1<<20);++mask){
			if(mask&(1<<p)){
				freq[mask^(1<<p)] += freq[mask];
			}
		}
	}
	ll ans = 0;
	std::vector<int> p2((1<<20)+1);
	p2[0] = 1;
	for(int i=1;i<=(1<<20);++i){
		p2[i] = (p2[i-1]*2);
		if(p2[i]>=mod){
			p2[i] -= mod;
		}
	}
	for(int i=0;i<(1<<20);++i){
		

		if(__builtin_parity(i)){
			ans -= p2[freq[i]] - 1;
		}else{
			ans += p2[freq[i]] - 1;
		}
	}
	ans %= mod;
	if(ans<0){
		ans += mod;
	}
	cout<<(ans)<<"\n";
	return 0;
}






















































































































































































































        












        








 



































        
































































































































































































































































































































































































































































