




























































































using namespace std;
































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    




const double pi = acos(-1);
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   
const int inf = 1e9;
const int mod = 1e9+7;  

ll p,q,n;
std::vector<ll> a;
std::vector<ll> m;
void calc(ll a,ll b){
    if(a==0 || b==0)return;
    ll q = a/b;
    m.pb(q);
    a -= b*q;
    calc(b,a);
}
bool solve(){
    if(n>1 && a[n-1]==1){
        a[n-2]++;
        a.pop_back();
        n--;
    }
    m.clear();
    calc(p,q);
    bool ans = 1;
    if(a.size() != m.size())ans = false;
    for(int i=0;i<min(a.size(),m.size());++i){
        ans = ans & (a[i]==m[i]);
    }   
    return ans;
}
int main(){
    cin>>p>>q>>n;
    a.assign(n,0);
    for(int i=0;i<n;++i)cin>>a[i];
    bool fa = solve();
    if(fa){
        cout<<"YES\n";
    }else{
        cout<<"NO\n";
    }
    return 0;
}






















































































































































































































        












        








 



































        


































































































































































































































































































































































































































































