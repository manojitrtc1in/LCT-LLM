


using namespace std;

int ans[160][20]={{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,4,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,19,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,6,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,29,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,7,18,19,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,17,39,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,28,18,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,17,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,27,6,4,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,49,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,38,17,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,37,27,28,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,16,39,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,59,5,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,47,48,16,5,6,1,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,37,27,-1,19,9,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,26,38,-1,5,8,-1,-1,-1,-1,-1,-1,-1,-1},{-1,57,69,49,4,18,7,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,58,15,-1,4,6,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,47,26,-1,17,5,-1,-1,-1,-1,-1,-1,-1,-1},{-1,67,36,37,15,3,4,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,79,48,-1,16,3,-1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,68,59,-1,29,2,-1,-1,-1,-1,-1,-1,-1,-1},{-1,77,57,25,14,15,19,1,-1,-1,-1,-1,-1,-1,-1},{-1,-1,46,36,-1,28,18,-1,1,-1,-1,-1,-1,-1,-1},{-1,-1,89,47,-1,14,17,-1,2,-1,-1,-1,-1,-1,-1},{-1,87,78,58,25,27,16,-1,3,1,-1,-1,-1,-1,-1},{-1,-1,67,69,-1,13,15,-1,4,-1,-1,-1,-1,-1,-1},{-1,-1,56,35,-1,26,14,-1,5,2,-1,-1,-1,-1,-1},{-1,97,189,46,24,39,13,-1,6,-1,1,-1,-1,-1,-1},{-1,-1,88,57,-1,25,12,-1,7,3,-1,-1,-1,-1,-1},{-1,-1,77,68,-1,38,29,-1,8,-1,-1,-1,-1,-1,-1},{-1,197,66,79,35,24,28,11,9,4,2,-1,-1,-1,-1},{-1,-1,289,45,-1,37,27,-1,10,-1,-1,1,-1,-1,-1},{-1,-1,188,56,-1,23,26,-1,11,5,-1,-1,-1,-1,-1},{-1,297,87,67,34,36,25,-1,12,10,3,-1,-1,-1,-1},{-1,-1,76,78,-1,49,24,-1,13,6,-1,-1,-1,-1,-1},{-1,-1,389,89,-1,35,23,-1,14,11,-1,2,-1,-1,-1},{-1,397,288,55,45,48,22,-1,15,7,4,-1,1,-1,-1},{-1,-1,187,66,-1,34,39,-1,16,12,-1,-1,-1,-1,-1},{-1,-1,86,77,-1,47,38,-1,17,8,-1,-1,-1,-1,-1},{-1,497,489,88,44,33,37,21,18,13,5,3,-1,-1,-1},{-1,-1,388,189,-1,46,36,-1,19,9,-1,10,-1,-1,-1},{-1,-1,287,65,-1,59,35,-1,20,14,-1,-1,2,-1,-1},{-1,597,96,76,55,45,34,-1,21,-1,6,-1,-1,1,-1},{-1,-1,589,87,-1,58,33,-1,22,15,-1,4,-1,-1,-1},{-1,-1,488,188,-1,44,32,-1,23,20,-1,11,-1,-1,-1},{-1,697,387,289,54,57,49,-1,24,16,7,9,10,-1,-1},{-1,-1,196,75,-1,43,48,-1,25,21,-1,-1,3,-1,-1},{-1,-1,689,86,-1,56,47,-1,26,17,-1,5,-1,-1,-1},{-1,797,588,187,65,69,46,31,27,22,8,12,-1,2,-1},{-1,-1,487,288,-1,55,45,-1,28,18,-1,-1,9,-1,1},{-1,-1,296,389,-1,68,44,-1,29,23,-1,8,11,-1,-1},{-1,897,789,85,64,54,43,-1,30,19,15,6,4,10,-1},{-1,-1,688,186,-1,67,42,-1,31,24,-1,13,-1,-1,-1},{-1,-1,587,287,-1,53,59,-1,32,-1,-1,20,8,-1,-1},{-1,997,396,388,75,66,58,-1,33,25,16,99,-1,3,-1},{-1,-1,889,489,-1,79,57,-1,34,30,-1,7,12,-1,-1},{-1,-1,788,95,-1,65,56,-1,35,26,-1,14,5,-1,2},{-1,1997,687,286,74,78,55,41,36,31,17,21,7,8,-1},{-1,-1,496,387,-1,64,54,-1,37,27,-1,19,99,-1,10},{-1,-1,989,488,-1,77,53,-1,38,32,-1,-1,20,-1,-1},{-1,2997,888,589,85,63,52,-1,39,28,18,15,13,4,9},{-1,-1,787,195,-1,76,69,-1,40,33,-1,22,6,-1,-1},{-1,-1,596,386,-1,89,68,-1,41,29,-1,-1,-1,-1,8},{-1,3997,1989,487,84,75,67,-1,42,34,25,18,19,6,3},{-1,-1,988,588,-1,88,66,-1,43,-1,-1,16,21,-1,7},{-1,-1,887,689,-1,74,65,-1,44,35,-1,23,14,-1,11},{-1,4997,696,295,185,87,64,51,45,40,26,30,-1,5,6},{-1,-1,2989,486,-1,73,63,-1,46,36,-1,199,18,-1,-1},{-1,-1,1988,587,-1,86,62,-1,47,41,-1,17,-1,-1,5},{-1,5997,987,688,94,189,79,-1,48,37,27,24,22,13,99},{-1,-1,796,789,-1,85,78,-1,49,42,-1,31,15,-1,4},{-1,-1,3989,395,-1,188,77,-1,50,38,-1,29,17,-1,-1},{-1,6997,2988,586,285,84,76,-1,51,43,28,9999,199,18,12},{-1,-1,1987,687,-1,187,75,-1,52,39,-1,25,30,-1,-1},{-1,-1,896,788,-1,83,74,-1,53,44,-1,32,23,-1,20},{-1,7997,4989,889,194,186,73,61,54,-1,35,-1,16,14,-1},{-1,-1,3988,495,-1,289,72,-1,55,45,-1,28,9999,-1,19},{-1,-1,2987,686,-1,185,89,-1,56,50,-1,26,29,-1,-1},{-1,8997,996,787,385,288,88,-1,57,46,36,33,31,16,18},{-1,-1,5989,888,-1,184,87,-1,58,51,-1,40,24,-1,13},{-1,-1,4988,989,-1,287,86,-1,59,47,-1,299,-1,-1,17},{-1,9997,3987,595,294,93,85,-1,60,52,37,27,28,15,21},{-1,-1,1996,786,-1,286,84,-1,61,48,-1,34,-1,-1,16},{-1,-1,6989,887,-1,389,83,-1,62,53,-1,41,32,-1,-1},{-1,19997,5988,988,485,285,82,71,63,49,38,39,25,23,15},{-1,-1,4987,1989,-1,388,189,-1,64,54,-1,19999,27,-1,199},{-1,-1,2996,695,-1,284,188,-1,65,-1,-1,35,299,-1,14},{-1,29997,7989,886,394,387,187,-1,66,55,45,42,40,28,9999},{-1,-1,6988,987,-1,193,186,-1,67,60,-1,-1,33,-1,22},{-1,-1,5987,1988,-1,386,185,-1,68,56,-1,38,26,-1,-1},{-1,39997,3996,2989,585,489,184,-1,69,61,46,36,19999,24,30},{-1,-1,8989,795,-1,385,183,-1,70,57,-1,43,39,-1,97},{-1,-1,7988,986,-1,488,92,-1,71,62,-1,50,41,-1,29},{-1,49997,6987,1987,494,384,289,81,72,58,47,399,34,26,-1},{-1,-1,4996,2988,-1,487,288,-1,73,63,-1,37,999999,-1,28},{-1,-1,9989,3989,-1,293,287,-1,74,59,-1,44,38,-1,23},{-1,59997,8988,895,685,486,286,-1,75,64,48,51,-1,25,27},{-1,-1,7987,1986,-1,589,285,-1,76,-1,-1,49,42,-1,31},{-1,-1,5996,2987,-1,485,284,-1,77,65,-1,29999,35,-1,26},{-1,69997,19989,3988,594,588,283,-1,78,70,55,45,37,33,-1},{-1,-1,9988,4989,-1,484,192,-1,79,66,-1,52,399,-1,25},{-1,-1,8987,995,-1,587,389,-1,80,71,-1,-1,50,-1,299},{-1,79997,6996,2986,785,393,388,91,81,67,56,48,43,38,24},{-1,-1,29989,3987,-1,586,387,-1,82,72,-1,46,36,-1,19999},{-1,-1,19988,4988,-1,689,386,-1,83,68,-1,53,29999,-1,32},{-1,89997,9987,5989,694,585,385,-1,84,73,57,60,49,34,999999},{-1,-1,7996,1995,-1,688,384,-1,85,69,-1,499,51,-1,40},{-1,-1,39989,3986,-1,584,383,-1,86,74,-1,47,44,-1,197},{-1,99997,29988,4987,885,687,292,-1,87,-1,58,54,1999999,36,39},{-1,-1,19987,5988,-1,493,489,-1,88,75,-1,61,48,-1,-1},{-1,-1,8996,6989,-1,686,488,-1,89,80,-1,59,-1,-1,38},{-1,199997,49989,2995,794,789,487,191,90,76,65,39999,52,35,33},{-1,-1,39988,4986,-1,685,486,-1,181,81,-1,55,45,-1,37},{-1,-1,29987,5987,-1,788,485,-1,182,77,-1,62,47,-1,41},{-1,299997,9996,6988,985,684,484,-1,183,82,66,-1,499,43,36},{-1,-1,59989,7989,-1,787,483,-1,184,78,-1,58,60,-1,-1},{-1,-1,49988,3995,-1,593,392,-1,185,83,-1,56,53,-1,35},{-1,399997,39987,5986,894,786,589,-1,186,79,67,63,46,48,399},{-1,-1,19996,6987,-1,889,588,-1,187,84,-1,70,39999,-1,34},{-1,-1,69989,7988,-1,785,587,-1,188,-1,-1,599,59,-1,29999},{-1,499997,59988,8989,1985,888,586,291,189,85,68,57,61,44,42},{-1,-1,49987,4995,-1,784,585,-1,190,180,-1,64,54,-1,1999999},{-1,-1,29996,6986,-1,887,584,-1,281,86,-1,71,2999999,-1,50},{-1,599997,79989,7987,994,693,583,-1,282,181,75,69,58,46,297},{-1,-1,69988,8988,-1,886,492,-1,283,87,-1,49999,-1,-1,49},{-1,-1,59987,9989,-1,989,689,-1,284,182,-1,65,62,-1,-1},{-1,699997,39996,5995,2985,885,688,-1,285,88,76,72,55,45,48}};
bool vis[160][20];
int calc(int x)
{
	int sum = 0;
	while(x)
	{
		sum += x % 10;
		x /= 10;
	}
	return sum;
}
int main()
{
	int T;
	scanf("%d", &T);
	while(T--)
	{
		int n, k;
		scanf("%d%d", &n, &k);
		if(k >= 2)
		{
			if(k * (k+1) / 2 == n)
			{
				printf("0\n");
				continue;
			}
			else printf("%d\n",ans[n-1][k-1]);
		}
		else if(n == 1 && k == 1)
		{
			printf("0\n");
			continue; 
		}
		else if(k == 0)
		{
			if(n == 0)
			{
				printf("0\n");
				continue;
			}
			int p1 = n / 9;
			int p2 = n % 9;
			if(p2)	printf("%d", p2);
			for(int i = 1; i <= p1; i++)	printf("9");
			printf("\n");
		}
		else if(k == 1)
		{
			long long a = 0, b = 0;
			bool flag = 0;
			for(int i = 0; i <= 20 && !flag; i++)
				for(int x = 0; x <= 9 && !flag; x++)
					for(int y = 0; y <= 9 && !flag; y++)
					{
						int sum1 = i * 9 + x + y;
						int sum2 = 0;
						if(y != 9)	sum2 = sum1 + 1;
						else
						{
							if(x != 9)	sum2 = x + 1;
							else	sum2 = 1;
						}
						
						if(sum1 + sum2 == n)
						{
							a = a * 10 + x;
							for(int _ = 1; _ <= i; _++)	a = a * 10 + 9;
							a = a * 10 + y;
							flag = 1;
						}
					}
			bool flag2 = 0;
			for(int i = 0; i <= 16 && !flag2; i++)
				for(int x = 0; x <= 9 && !flag2; x++)
				{
					int sum1 = x + i * 9 + 17;
					int sum2 = x + i * 9 + 9;
					if(sum1 + sum2 == n)
					{
						b = b * 10 + x;
						for(int _ = 1; _ <= i; _++)	b = b * 10 + 9;
						b = b * 100 + 89;
						flag2 = 1;
					}
				}
			long long ans = 2e18;
			if(ans > a && a != 0)	ans = a;
			if(ans > b && b != 0)	ans = b;
			if(ans != 2e18)	cout << ans << endl;
			else	cout << -1 << endl;
		}
	}	
	return 0;
}
  		 				 	 			   		  	 	  	 	