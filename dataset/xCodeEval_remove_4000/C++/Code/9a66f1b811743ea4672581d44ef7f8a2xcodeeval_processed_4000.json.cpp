






using namespace std;


typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;

ll mod = (1000000007LL);

inline ll poww(ll a, ll b)
{
    ll res = 1;
    while (b > 0)
    {
        if(b & 1) res = (res * a)%mod;
        a = (a * a)%mod;
        b >>= 1;
    }
    return res;
}
inline pii operator+(pii A, pii B){
	return pii(A.f + B.f, A.s + B.s);
}
inline pii operator-(pii A, pii B){
	return pii(A.f - B.f, A.s - B.s);
}
inline ll mult(ll a, ll b){
	return (a * b) % mod;
}

ll gcd (ll a, ll b) {
    while (b) {
        a %= b;
        swap(a, b);
    }
    return a;
}







int n, m, q, k, v[N], ans;
pii TT, w[N];
string s;
vector<int> f[6][6][6][4];
int dp[510][4][6][6][6];
int solve(int h, int lst, int x, int y, int z){
    if(h <= 0) return 0;
    if(dp[h][lst][x][y][z]!=-1) return dp[h][lst][x][y][z];
    bitset<5> mex;
    mex.set();
    mex[solve(h-x, 0,x,y,z)]=0;
    if(lst != 1) mex[solve(h-y, 1, x, y, z)]=0;
    if(lst != 2) mex[solve(h-z, 2, x, y, z)]=0;
    return dp[h][lst][x][y][z] = mex._Find_first();
}
int get(int h, int lst, int x, int y, int z){
    if(h <= 0) return 0;
    int len = sz(f[x][y][z][lst]);
    if(h >= 500) return f[x][y][z][lst][(h - 500)%len];
    return solve(h, lst, x, y, z);
}
void build(){
    memset(dp,-1,sizeof dp);
    f[1][1][1][0] = {0,1};
    f[1][1][1][1] = {0,1};
    f[1][1][1][2] = {0,1};
    f[1][1][2][0] = {2,0,1};
    f[1][1][2][1] = {2,0,1};
    f[1][1][2][2] = {0,0,1};
    f[1][1][3][0] = {0,1,2,1};
    f[1][1][3][1] = {0,1,2,1};
    f[1][1][3][2] = {0,1,0,0};
    f[1][1][4][0] = {0,1,2,1,2};
    f[1][1][4][1] = {0,1,2,1,2};
    f[1][1][4][2] = {0,1,0,0,0};
    f[1][1][5][0] = {2,1,2,1,0,1};
    f[1][1][5][1] = {2,1,2,1,0,1};
    f[1][1][5][2] = {0,0,0,0,0,1};
    f[1][2][2][0] = {2,0,1};
    f[1][2][2][1] = {2,0,1};
    f[1][2][2][2] = {2,0,1};
    f[1][2][3][0] = {0,3,1,3};
    f[1][2][3][1] = {0,2,1,2};
    f[1][2][3][2] = {0,1,1,0};
    f[1][2][4][0] = {0,2,1,3,2};
    f[1][2][4][1] = {0,2,1,2,1};
    f[1][2][4][2] = {0,2,1,0,0};
    f[1][2][5][0] = {2,3,1,2,0,1};
    f[1][2][5][1] = {2,1,1,2,0,1};
    f[1][2][5][2] = {2,0,0,0,0,1};
    f[1][3][3][0] = {0,1};
    f[1][3][3][1] = {0,1};
    f[1][3][3][2] = {0,1};
    f[1][3][4][0] = {3,2,0,1,0,1,2};
    f[1][3][4][1] = {0,1,0,1,0,1,2};
    f[1][3][4][2] = {1,0,0,1,0,1,0};
    f[1][3][5][0] = {0,1};
    f[1][3][5][1] = {0,1};
    f[1][3][5][2] = {0,1};
    f[1][4][4][0] = {0,1,0,1,2};
    f[1][4][4][1] = {0,1,0,1,2};
    f[1][4][4][2] = {0,1,0,1,2};
    f[1][4][5][0] = {0,1,2};
    f[1][4][5][1] = {0,1,2};
    f[1][4][5][2] = {0,1,0};
    f[1][5][5][0] = {0,1};
    f[1][5][5][1] = {0,1};
    f[1][5][5][2] = {0,1};
    f[2][1][1][0] = {2,0,1};
    f[2][1][1][1] = {2,0,1};
    f[2][1][1][2] = {2,0,1};
    f[2][1][2][0] = {1,0,2};
    f[2][1][2][1] = {1,0,0};
    f[2][1][2][2] = {1,0,2};
    f[2][1][3][0] = {0,3,1,2};
    f[2][1][3][1] = {0,0,1,1};
    f[2][1][3][2] = {0,1,1,0};
    f[2][1][4][0] = {0,3,1,2,2};
    f[2][1][4][1] = {0,0,1,1,2};
    f[2][1][4][2] = {0,1,1,0,0};
    f[2][1][5][0] = {1,3,2,1,0,2};
    f[2][1][5][1] = {1,1,2,1,0,0};
    f[2][1][5][2] = {1,0,0,0,0,2};
    f[2][2][2][0] = {0,1,1,0};
    f[2][2][2][1] = {0,1,1,0};
    f[2][2][2][2] = {0,1,1,0};
    f[2][2][3][0] = {0,1,1,2,0};
    f[2][2][3][1] = {0,1,1,2,0};
    f[2][2][3][2] = {0,1,1,0,0};
    f[2][2][4][0] = {1,2,2,0,0,1};
    f[2][2][4][1] = {1,2,2,0,0,1};
    f[2][2][4][2] = {1,0,0,0,0,1};
    f[2][2][5][0] = {2,2,1,0,0,1,1};
    f[2][2][5][1] = {2,2,1,0,0,1,1};
    f[2][2][5][2] = {0,0,0,0,0,1,1};
    f[2][3][3][0] = {0,1,1,2,0};
    f[2][3][3][1] = {0,1,1,2,0};
    f[2][3][3][2] = {0,1,1,2,0};
    f[2][3][4][0] = {1,2,2,0,0,1};
    f[2][3][4][1] = {1,2,2,0,0,1};
    f[2][3][4][2] = {1,2,0,0,0,1};
    f[2][3][5][0] = {1,3,2,0,0,3,1};
    f[2][3][5][1] = {1,2,2,0,0,2,1};
    f[2][3][5][2] = {1,0,0,0,0,1,1};
    f[2][4][4][0] = {1,2,2,0,0,1};
    f[2][4][4][1] = {1,2,2,0,0,1};
    f[2][4][4][2] = {1,2,2,0,0,1};
    f[2][4][5][0] = {1,1,3,0,0,2,3};
    f[2][4][5][1] = {1,1,2,0,0,2,2};
    f[2][4][5][2] = {1,1,0,0,0,2,1};
    f[2][5][5][0] = {0,2,1,0,0,1,1};
    f[2][5][5][1] = {0,2,1,0,0,1,1};
    f[2][5][5][2] = {0,2,1,0,0,1,1};
    f[3][1][1][0] = {0,1};
    f[3][1][1][1] = {0,1};
    f[3][1][1][2] = {0,1};
    f[3][1][2][0] = {0,3,1,3};
    f[3][1][2][1] = {0,0,1,1};
    f[3][1][2][2] = {0,2,1,2};
    f[3][1][3][0] = {0,1,2,1};
    f[3][1][3][1] = {0,0,0,1};
    f[3][1][3][2] = {0,1,2,1};
    f[3][1][4][0] = {0,2,2,1,3};
    f[3][1][4][1] = {0,0,0,1,1};
    f[3][1][4][2] = {0,2,1,1,0};
    f[3][1][5][0] = {2,1,2,1,0,1};
    f[3][1][5][1] = {0,1,2,1,0,0};
    f[3][1][5][2] = {2,1,0,0,0,1};
    f[3][2][2][0] = {0,1,1,2,0};
    f[3][2][2][1] = {0,1,1,2,0};
    f[3][2][2][2] = {0,1,1,2,0};
    f[3][2][3][0] = {0,2,1,1,0};
    f[3][2][3][1] = {0,0,1,1,0};
    f[3][2][3][2] = {0,2,1,1,0};
    f[3][2][4][0] = {1,1,2,0,0,3};
    f[3][2][4][1] = {1,1,1,0,0,0};
    f[3][2][4][2] = {1,1,0,0,0,1};
    f[3][2][5][0] = {1,2,2,0,0,3,1};
    f[3][2][5][1] = {1,1,2,0,0,0,1};
    f[3][2][5][2] = {1,0,0,0,0,1,1};
    f[3][3][3][0] = {1,1,0,0,0,1};
    f[3][3][3][1] = {1,1,0,0,0,1};
    f[3][3][3][2] = {1,1,0,0,0,1};
    f[3][3][4][0] = {1,2,0,0,0,1,1};
    f[3][3][4][1] = {1,2,0,0,0,1,1};
    f[3][3][4][2] = {1,0,0,0,0,1,1};
    f[3][3][5][0] = {2,2,0,0,0,1,1,1};
    f[3][3][5][1] = {2,2,0,0,0,1,1,1};
    f[3][3][5][2] = {0,0,0,0,0,1,1,1};
    f[3][4][4][0] = {1,2,0,0,0,1,1};
    f[3][4][4][1] = {1,2,0,0,0,1,1};
    f[3][4][4][2] = {1,2,0,0,0,1,1};
    f[3][4][5][0] = {2,2,0,0,0,1,1,1};
    f[3][4][5][1] = {2,2,0,0,0,1,1,1};
    f[3][4][5][2] = {2,0,0,0,0,1,1,1};
    f[3][5][5][0] = {2,2,0,0,0,1,1,1};
    f[3][5][5][1] = {2,2,0,0,0,1,1,1};
    f[3][5][5][2] = {2,2,0,0,0,1,1,1};
    f[4][1][1][0] = {0,1,0,1,2};
    f[4][1][1][1] = {0,1,0,1,2};
    f[4][1][1][2] = {0,1,0,1,2};
    f[4][1][2][0] = {0,1,2};
    f[4][1][2][1] = {0,1,2};
    f[4][1][2][2] = {0,1,0};
    f[4][1][3][0] = {0,2,3,1,2};
    f[4][1][3][1] = {0,0,0,1,2};
    f[4][1][3][2] = {0,1,2,1,2};
    f[4][1][4][0] = {0,2,1,2,1};
    f[4][1][4][1] = {0,0,0,0,1};
    f[4][1][4][2] = {0,2,1,2,1};
    f[4][1][5][0] = {2,3,1,2,0,1};
    f[4][1][5][1] = {0,0,1,2,0,0};
    f[4][1][5][2] = {2,1,1,0,0,1};
    f[4][2][2][0] = {1,2,2,0,0,1};
    f[4][2][2][1] = {1,2,2,0,0,1};
    f[4][2][2][2] = {1,2,2,0,0,1};
    f[4][2][3][0] = {1,1,3,0,0,3};
    f[4][2][3][1] = {1,1,1,0,0,0};
    f[4][2][3][2] = {1,1,2,0,0,2};
    f[4][2][4][0] = {2,1,1,0,0,2};
    f[4][2][4][1] = {0,1,1,0,0,0};
    f[4][2][4][2] = {2,1,1,0,0,2};
    f[4][2][5][0] = {1,1,3,0,0,2,2};
    f[4][2][5][1] = {1,1,1,0,0,0,0};
    f[4][2][5][2] = {1,1,0,0,0,2,1};
    f[4][3][3][0] = {1,2,0,0,0,1,1};
    f[4][3][3][1] = {1,2,0,0,0,1,1};
    f[4][3][3][2] = {1,2,0,0,0,1,1};
    f[4][3][4][0] = {1,1,0,0,0,2,1};
    f[4][3][4][1] = {1,1,0,0,0,0,1};
    f[4][3][4][2] = {1,1,0,0,0,2,1};
    f[4][3][5][0] = {1,2,0,0,0,3,1,1};
    f[4][3][5][1] = {1,1,0,0,0,0,1,1};
    f[4][3][5][2] = {1,0,0,0,0,1,1,1};
    f[4][4][4][0] = {1,0,0,0,0,1,1,1};
    f[4][4][4][1] = {1,0,0,0,0,1,1,1};
    f[4][4][4][2] = {1,0,0,0,0,1,1,1};
    f[4][4][5][0] = {2,0,0,0,0,1,1,1,1};
    f[4][4][5][1] = {2,0,0,0,0,1,1,1,1};
    f[4][4][5][2] = {0,0,0,0,0,1,1,1,1};
    f[4][5][5][0] = {2,0,0,0,0,1,1,1,1};
    f[4][5][5][1] = {2,0,0,0,0,1,1,1,1};
    f[4][5][5][2] = {2,0,0,0,0,1,1,1,1};
    f[5][1][1][0] = {0,1};
    f[5][1][1][1] = {0,1};
    f[5][1][1][2] = {0,1};
    f[5][1][2][0] = {1,0,2};
    f[5][1][2][1] = {1,0,0};
    f[5][1][2][2] = {1,0,2};
    f[5][1][3][0] = {0,1};
    f[5][1][3][1] = {0,1};
    f[5][1][3][2] = {0,1};
    f[5][1][4][0] = {2,3,1,2,0,1};
    f[5][1][4][1] = {0,0,1,2,0,0};
    f[5][1][4][2] = {1,2,1,2,0,1};
    f[5][1][5][0] = {2,1,2,1,0,1};
    f[5][1][5][1] = {0,0,0,1,0,0};
    f[5][1][5][2] = {2,1,2,1,0,1};
    f[5][2][2][0] = {0,2,1,0,0,1,1};
    f[5][2][2][1] = {0,2,1,0,0,1,1};
    f[5][2][2][2] = {0,2,1,0,0,1,1};
    f[5][2][3][0] = {1,3,2,0,0,3,1};
    f[5][2][3][1] = {1,1,2,0,0,0,1};
    f[5][2][3][2] = {1,2,2,0,0,2,1};
    f[5][2][4][0] = {1,1,3,0,0,2,3};
    f[5][2][4][1] = {1,1,1,0,0,0,0};
    f[5][2][4][2] = {1,1,2,0,0,2,2};
    f[5][2][5][0] = {2,1,1,0,0,1,2};
    f[5][2][5][1] = {0,1,1,0,0,0,0};
    f[5][2][5][2] = {2,1,1,0,0,1,2};
    f[5][3][3][0] = {2,2,0,0,0,1,1,1};
    f[5][3][3][1] = {2,2,0,0,0,1,1,1};
    f[5][3][3][2] = {2,2,0,0,0,1,1,1};
    f[5][3][4][0] = {1,3,0,0,0,3,1,1};
    f[5][3][4][1] = {1,1,0,0,0,0,1,1};
    f[5][3][4][2] = {1,2,0,0,0,2,1,1};
    f[5][3][5][0] = {1,1,0,0,0,2,2,1};
    f[5][3][5][1] = {1,1,0,0,0,0,0,1};
    f[5][3][5][2] = {1,1,0,0,0,2,2,1};
    f[5][4][4][0] = {2,0,0,0,0,1,1,1,1};
    f[5][4][4][1] = {2,0,0,0,0,1,1,1,1};
    f[5][4][4][2] = {2,0,0,0,0,1,1,1,1};
    f[5][4][5][0] = {1,0,0,0,0,2,1,1,1};
    f[5][4][5][1] = {1,0,0,0,0,0,1,1,1};
    f[5][4][5][2] = {1,0,0,0,0,2,1,1,1};
    f[5][5][5][0] = {0,1,1,1,1,1,0,0,0,0};
    f[5][5][5][1] = {0,1,1,1,1,1,0,0,0,0};
    f[5][5][5][2] = {0,1,1,1,1,1,0,0,0,0};

}
int pref[N], suf[N], x, y, z;
int cost[5];
int32_t main(){
	ios::sync_with_stdio(false); cin.tie(0);
    build();
    cin>>q;
    while(q--){ans=0;
        cin>>n>>x>>y>>z;
        if(y > z) swap(y, z);
        cost[0]=x,cost[1]=y,cost[2]=z;
        int xtot=0,ans=0;
        for(int i = 1; i <= n; i++){
            cin>>v[i];
            xtot ^= get(v[i],0,x,y,z);
        }
        for(int i = 1; i <= n; i++){
            int curr = get(v[i],0,x,y,z);
            for(int j = 0; j < 3; j++){
                int A = get(v[i] - cost[j], j, x,y,z);
                int falta = (xtot ^ curr);
                if(A==falta) ans ++;
            }
        }
        cout<<ans<<"\n";
    }
} 