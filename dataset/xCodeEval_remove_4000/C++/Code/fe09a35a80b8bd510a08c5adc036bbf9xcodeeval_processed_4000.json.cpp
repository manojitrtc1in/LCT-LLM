   




























































































using namespace std;































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    




const double pi = acos(-1);
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   
const ll inf64=1e16;


const int ini = -1e9;

const int N = 1e5+100;
int n,k,a[N];
ll s[N];
int solve(int p){
    int l=0,r=p;
    while ( l<r ) {
        int m=(l+r+1)/2;
        if ( (ll)m*a[p]-(s[p]-s[p-m])<=k ) l=m;
        else r=m-1;
    }
    return l+1;
}
int main(){
    cin>>n>>k;
    for(int i=0;i<n;++i){
        cin>>a[i];
    }
    

    sort(a,a+n);
    for(int i=0;i<n;++i){
        s[i+1] = s[i] + a[i];        
    }
    

    int ans=0,sol=0;
    for ( int i=0; i<n; i++ ) {
        int now=solve(i);
        if ( now>ans ) ans=now,sol=a[i];
    }
    

    printf("%d %d\n",ans,sol);
    

}






















































































































































































































        












        








 



































        
































































































































































































































































































































































































































































