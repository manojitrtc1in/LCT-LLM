   




























































































using namespace std;
































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    




const double pi = acos(-1);
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   
const ll inf64=1e16;
const int mod = 1e9+7;
const int ini = -1e9;

const int N = 2e5+10;
int par[N];
int n;
std::vector<int> path;
int root(int x){
    while(x != par[x]){
        path.pb(x);
        x = par[x];
    }
    return x;
}
int main(){
    scanf("%d",&n);
    par[1] = 1;
    for(int i=2;i<=n;++i){
        scanf("%d",&par[i]);
    }
    root(n);
    reverse(path.begin(),path.end());
    cout<<"1 ";
    for(auto x:path){
        cout<<x<<" ";
    }
    cout<<"\n";
    return 0;
}






















































































































































































































        












        








 



































        
































































































































































































































































































































































































































































