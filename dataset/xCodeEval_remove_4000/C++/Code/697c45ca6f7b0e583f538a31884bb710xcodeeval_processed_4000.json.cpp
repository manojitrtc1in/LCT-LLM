
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































using namespace std;














typedef long long ll;





typedef long double lld;
typedef unsigned long long ull;

template<typename A> ostream& operator<<(ostream &cout, vector<A> const &v);
template<typename A, typename B> ostream& operator<<(ostream &cout, pair<A, B> const &p) { return cout << "(" << p.f << ", " << p.s << ")"; }
template<typename A> ostream& operator<<(ostream &cout, vector<A> const &v) {
    cout << "["; for (int i = 0; i < v.size(); i++) {if (i) cout << ", "; cout << v[i];} return cout << "]";
}
template<typename A, typename B> istream& operator>>(istream& cin, pair<A, B> &p) {
    cin >> p.first;
    return cin >> p.second;
}

mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());




void usaco(string filename) {
    

    freopen((filename + ".in").c_str(), "r", stdin);
    freopen((filename + ".out").c_str(), "w", stdout);
}






const lld pi = 3.14159265358979323846;
const ll mod = 1000000007;







ll n, m, q, k, l, r, x, y, z;
const ll id0 = 1e6 + 17403;
ll a[id0];
ll b[id0];
ll c[id0];
string s, t;



void solve(int tc = 0) {
    cin >> s;

    ll ans = 1e9;
    for (ll i = 0; i <= 62; i++) {
        ll r = (1LL << i);

        string t = to_string(r);

        ll p = 0;
        for (char c : s) {
            if (p < t.length() && c == t[p]) ++p;
        }

        ans = min(ans, ll(s.length() + t.length() - 2 * p));
    }
    cout << ans << '\n';
}

int main() {

    auto begin = std::chrono::high_resolution_clock::now();


    send help


    



    


    

    


    cout << setprecision(15) << fixed;



    int tc = 1;
    cin >> tc;
    for (int t = 0; t < tc; t++) {
        solve(t);
    }


    auto end = std::chrono::high_resolution_clock::now();
    cerr << setprecision(4) << fixed;
    cerr << "Execution time: " << std::chrono::duration_cast<std::chrono::duration<double>>(end - begin).count() << " seconds" << endl;

}