




























































































using namespace std;

































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;
const ll highest = 1e18;    
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   
const int mod = 1e9+7;  
const int ini = -1e9;

const int N = 3e5+100;
ll cur,tmp;int bst;
multiset<ll> ms;

std::vector<pair<ll,ll> > v;
ll t,w;
int pos;
void relax(){
    while(!v.empty() && v.back().fi > cur){
        ms.insert(v.back().se);
        v.pop_back();
        ++pos;
    }
    bst = min(bst,pos);
}   
int main(){
    int n;scanf("%d",&n);
    pos = 1;
    bst = N;
    cin>>cur>>tmp;
    for(int i=1;i<n;++i){
        cin>>t>>w;
        v.pb(mk(t,w-t+1));
    }
    sort(v.begin(),v.end());
    relax();
    while(!ms.empty()){
        ll x = *ms.begin();
        ms.erase(ms.begin());
        if(cur<x){
            break;
        }
        cur -= x;
        --pos;
        relax();
    }
    cout<<bst<<"\n";
    return 0;
}






















































































































































































































        












        








 



































        
































































































































































































































































































































































































































































    