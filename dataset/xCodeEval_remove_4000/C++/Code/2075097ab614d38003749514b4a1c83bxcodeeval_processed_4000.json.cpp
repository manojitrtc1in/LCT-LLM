




























































































using namespace std;

































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;
const ll highest = 1e18;    
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   





















































































































































const int N = 110;
int n;
char s[4][N];
int main(){
    scanf("%d",&n);
    if(n==1){
        puts("a");
        puts("a");
        puts("b");
        puts("b");
        return 0;
    }else if(n==2){
        puts("aa");
        puts("dd");
        puts("cc");
        puts("bb");
        return 0;
    }
    if(n%2 == 0){        
        for(int i=0;i<n/2;i++){
            s[0][i+i] = s[0][i+i+1] = 'a'+i%2;
            s[3][i+i] = s[3][i+i+1] = 'c'+i%2;
        }
        for(int i=0;i<n/2-1;i++){
            s[1][i+i+2] = s[1][i+i+1] = 'e'+i%2;
            s[2][i+i+2] = s[2][i+i+1] = 'g'+i%2;
        }
        s[1][0] = s[2][0] = 'x';
        s[1][n-1] = s[2][n-1] = 'y';
    }else{
        for(int i=0;i<n/2;i++){
            s[0][i+i] = s[0][i+i+1] = 'a'+i%2;
            s[1][i+i] = s[1][i+i+1] = 'c'+i%2;
            s[2][i+i+2] = s[2][i+i+1] = 'e'+i%2;
            s[3][i+i+2] = s[3][i+i+1] = 'g'+i%2;
        }
        s[2][0] = s[3][0] = 'x';
        s[0][n-1] = s[1][n-1]='y';
    }   
    for(int i=0;i<4;++i){
        puts(s[i]);
    }
    return 0;
}



























































































































































































































        












        








 



































        































































































































































































































































































































































































































































