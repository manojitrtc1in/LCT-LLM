




























































































using namespace std;
































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    






const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   
const ll inf = 1e18;
const int mod = 1e9+7;  
const int ini = -1e9;

const int N = 2e5+100;
const int lim = 1e9;
std::vector<int> pp;
pair<ll,ll> a[N];
int main(){	
	int n;scanf("%d",&n);
	for(int i=1;i<=n;++i){
		cin>>a[i].se;
		int x = a[i].se;
		int r = sqrt(x);
		a[i].fi = min(abs(r*r - a[i].se),abs((r+1)*(r+1)-a[i].se));
	}
	sort(a+1,a+n+1);
	ll moves = 0;
	for(int i=1;i<=n/2;++i){
		moves += a[i].fi;
	}
	for(int i=n/2+1;i<=n;++i){
		if(a[i].fi==0)moves += 1;
		if(a[i].se==0)moves += 1;
	}
	cout<<moves<<"\n";
	return 0;
}






















































































































































































































        












        








 



































        
































































































































































































































































































































































































































































