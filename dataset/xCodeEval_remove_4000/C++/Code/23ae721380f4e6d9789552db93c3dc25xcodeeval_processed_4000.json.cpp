














































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































using namespace std;
typedef long long ll;
typedef double ld;
template <typename T>
inline void read(T &x)

{x=0;int flag=1;char ch=getchar();while(48>ch || ch>57) {if(ch==45) flag=-1; ch=getchar();}while(48<=ch && ch<=57) x=x*10+ch-48,ch=getchar();x*=flag;}
template <typename T>
inline void print(T x)

{if(x<0) putchar(45),x=-x;if(x>9) print(x/10);putchar(x%10+48);}


void id0(int a[],int n,int g){for(int i=1+g;i<=n;i++){int temp=a[i],j=i-g;for(;j>=1;j-=g){if(a[j]>temp){a[j+g]=a[j];}else break;}a[j+g]=temp;}}
void shellSort(int a[],int n){vector<int>G;for(int i=1;i<=n;){G.push_back(i);i=3*i+1;}for(int i=G.size()-1;i>=0;i--){id0(a,n,G[i]);}}

const int MAXN = 200005;
int ans[505];
int n,l,r,s;
bool fun(int now,int ss){
    map<int,int>vis;
    for(int i=l; i<r; i++)
    {
        ans[i]=now;
        ss-=now;
        vis[now]++;
        now--;
    }
    if(ss==0){
        ss=1;
        ans[r]=1;
        vis[ans[r-1]]--;
        ans[r-1]--;
        vis[ans[r-1]]++;
    }
    ans[r]=ss;
    vis[ss]++;
    for(int i=1; i<=n; i++)
    {
        if(i<l || i>r)
        {
            for(int j=1; j<=n; j++)
            {
                if(!vis[j])
                {
                    ans[i]=j;
                    vis[j]++;
                    break;
                }
            }
        }
    }
    bool ok=true;
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            ok=false;
            break;
        }
        if(ans[i]<=0){
            ok=false;
            break;
        }
    }
    return ok;
}
int main()
{
    int t;cin>>t;
    while(t--){
        cin>>n>>l>>r>>s;
        int num=r-l+1;
        vector<int>ssum;
        for(int i=1;i<=n;i++){
            ssum.push_back((i+(i-num+1))*num/2);
        }
        int id=lower_bound(ssum.begin(),ssum.end(),s)-ssum.begin();
        bool ok=false;
        for(int i=1;i<=n;i++){
            if(fun(i,s)){
                for(int j=1; j<=n; j++)
                {
                    cout<<ans[j]<<" ";
                }
                cout<<endl;
                ok=true;
                break;
            }
        }
        if(!ok)
            cout<<-1<<endl;
    }
	return 0;
}
