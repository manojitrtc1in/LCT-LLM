   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    

    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    using namespace std;
    

    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    typedef struct{ int sum,suf,pre,max;} Node;
    int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
    const int MAXN = 2e5+100;
    const int UP = 31;
    

    

    const ll highest = 1e18;    
    

    

    const double pi = acos(-1);
    const double Phi =  1.618033988749894;
    const int logn = 20;
    const double root5 = 2.236067977;   
    const ll inf64=1e16;
    

    const int ini = -1e9;
    
    const int N = 1e5+10;
    ll a[N];
    ll b[N];
    ll solve(ll *a,int m,ll *b,int n){
        ll tmp = 0;
        for(int i=0;i<n;++i){
            tmp += b[i];
        }
        

        ll ret = tmp;
        for(int i=0;i<m-1;++i){
            ret += min(a[i],tmp);
            

        }
        return ret;
    }
    int main(){
        int m,n;
        cin>>m>>n;
        for(int i=0;i<m;++i){
            cin>>a[i];
        }
        for(int i=0;i<n;++i){
            cin>>b[i];
        }
        sort(a,a+m);
        sort(b,b+n);
        ll ans = min(solve(a,m,b,n),solve(b,n,a,m));
        cout<<ans<<"\n";
        return 0;
    }
    

    

    


    

    

    


    

    

    


    

    

    


    

    

    

    


    

    

    

    

    

    

    

    


    

    

    


    

    

    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    

    

    


    

    

    

    

    


    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    


    

    

    

    


    

            
    

    

    

    

    

    

            
    

    

    

    

     
    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

            
    

    

    


    

    

    


    

    

    


    

    

    

    

    

    

    

    

    

    


    

    

    

    

    


    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    


    

    

    


    

    

    

    

    


    

    

    

    

    


    

    

    

    

    

    


    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    


    

    

    

    

    

    


    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    


    


    

    

    

    

    

    

    

    

    


    

    

    

    

    


    

    


    

    

    

    


    

    

    

    

    


    

    

    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

