   




























































































using namespace std;































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    




const double pi = acos(-1);
const double Phi =  1.618033988749894;
const int logn = 20;
const ll inf = 1e18;
const double root5 = 2.236067977;   
const ll inf64=1e16;
const int mod = 1e9+7;
const int ini = -1e9;

const int N = 1e5+100;
bool dp[N];
int a[N];
int id[N];
bool cmp(int i,int j){
    return a[i]<a[j];
}
int main(){
    int n;
    scanf("%d",&n);
    for(int i=1;i<=n;++i)cin>>a[i];
    for(int i=1;i<=n;++i)id[i] = i;
    sort(id+1,id+n+1,cmp);
    for(int i=n;i>=1;--i){
        int j = id[i];
        bool ok = 0;
        for(int k=j+a[j];k<=n;k+=a[j]){
            if(a[k]>a[j]){
                if(dp[k]==0){
                    ok = 1;
                    break;
                }
            }
        }
        for(int k=j-a[j];k>0;k-=a[j]){
            if(a[k]>a[j]){
                if(dp[k]==0){
                    ok = 1;
                    break;
                }
            }
        }
        dp[j] = ok;
    }
    for(int i=1;i<=n;++i){
        if(dp[i])cout<<"A";
        else cout<<"B";
    }
    cout<<"\n";
    return 0;
}






















































































































































































































        












        








 



































        
































































































































































































































































































































































































































































