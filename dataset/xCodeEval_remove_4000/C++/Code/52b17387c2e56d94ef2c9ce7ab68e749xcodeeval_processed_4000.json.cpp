   




























































































using namespace std;
































typedef struct{ int sum,suf,pre,max;} Node;
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
const int MAXN = 2e5+100;
const int UP = 31;




const ll highest = 1e18;    




const double pi = acos(-1);
const double Phi =  1.618033988749894;
const int logn = 20;
const double root5 = 2.236067977;   
const int mod = 1e9+7;
const int ini = -1e9;

ll id0, busSpace, numGroups;
ll walkingSpeed, busSpeed, totalDist;
int main(){
    double low, mid, high, timePassed, x, y;
    ll i;
    cin>>id0>>totalDist>>walkingSpeed>>busSpeed>>busSpace;
    

    numGroups = id0/busSpace;
    

    if (id0%busSpace)numGroups++;
    

    low = 0, high = ((double)totalDist)/((double)walkingSpeed);
    while((high-low)>=1e-8){
        mid = (low + high)/2.;
        

        timePassed = 0;
        

        for(int i=0;i<numGroups;++i){
            
            x = (((double)totalDist) - walkingSpeed*mid)/((double)(busSpeed-walkingSpeed));
            timePassed += x;
            if(i+1<numGroups){
                
                y = x*((double)(busSpeed-walkingSpeed))/((double)(busSpeed+walkingSpeed));
                timePassed += y;
            }
        }
        

        if (timePassed > mid) low = mid;
        

        else high = mid;
    }
    printf("%.10lf\n", low);
    return 0;
}   






















































































































































































































        












        








 



































        
































































































































































































































































































































































































































































