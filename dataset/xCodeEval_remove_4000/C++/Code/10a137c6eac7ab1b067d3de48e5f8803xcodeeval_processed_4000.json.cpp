


using namespace std;
using namespace __gnu_pbds;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pair<int,int> > vpi;
typedef pair<int,int> ii;
typedef long long ll;
typedef unsigned long long ull;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update > pbds;






















































































































 


		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

		

 
 







































































































































































































































































































































































































void split(const string& s, char delim,vector<string>& v) {
    auto i = 0;
    auto pos = s.find(delim);
    if(pos==string::npos)
    {
    	v.push_back(s);
    }
    while (pos != string::npos) {
      v.push_back(s.substr(i, pos-i));
      i = ++pos;
      pos = s.find(delim, pos);

      if (pos == string::npos)
         v.push_back(s.substr(i, s.length()));
    }
}

int main(){
	int n;
	cin>>n;
	int a[n+3]={0},p[n+2]={0},s[n+2]={0};
	for(int i=1;i<=n;i++)cin>>a[i];
	for(int i=n;i>=1;i--)
	{
		p[i]=p[i+1];
		if(a[i]==0)p[i]++;
	}
	ll ans=0;
	for(int i=1;i<=n;i++)
	{
		if(a[i]==1)ans+=1ll*p[i];
	}
	cout<<ans<<'\n';
	return 0;
	
}
