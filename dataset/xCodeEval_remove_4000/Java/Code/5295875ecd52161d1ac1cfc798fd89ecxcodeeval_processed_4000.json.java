import java.util.*;
import java.lang.*;
import java.io.*;



public class cf706 {






























   static int[] spf;

   public static void id0(int n){
        spf=new int[n+1];   spf[1]=1;
         ArrayList<Integer> primes=new ArrayList<>();   
        for (int i = 2; i <= n; ++i) {
            if (spf[i] == 0) {
                primes.add(i);
                spf[i] = i;
            }
            for (int x : primes) {
                if (x > spf[i] || ((long)x*(long)i) >(long)n) break;
                spf[x * i] = x;
            }
        }
    }


    

    


    

    

    


    

    

    


    


    

    

    


    

    

    

    

    



    

    

    

public static void main(String[] args) throws Exception{
    id0(10000000);  


    InputStreamReader ip=new InputStreamReader(System.in);
    BufferedReader br = new BufferedReader(ip);
    int t= Integer.parseInt(br.readLine());
    long[] vst=new long[10000001]; 

    long counter=0;    
    while(t-->0){
    

        String[] strs=(br.readLine()).trim().split(" ");
        int n=Integer.parseInt(strs[0]),k=Integer.parseInt(strs[1]);


        strs=(br.readLine()).trim().split(" ");

        


        

        int ans=1;
        counter++;
        for(int i=0;i<n;i++){
            int x=Integer.parseInt(strs[i]);
            


            

            int prevspf=-1;  int ct=0;
            int oddprod=1;
            while(x>1){
                

                if(prevspf==-1){prevspf=spf[x]; ct++;}
                else if(prevspf==spf[x]){ct++;}
                else{ if(ct%2==1){oddprod=oddprod*prevspf;}  ct=1; prevspf=spf[x];}
                x=x/spf[x];
            }
            
            if(ct%2==1){oddprod=oddprod*prevspf;}
            

            

            

            

            


            if(vst[oddprod]==counter){ans++; counter++; vst[oddprod]=counter; }
            else{vst[oddprod]=counter;}
        }
        System.out.println(ans);
    }
    }
}



        


        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

            
        

        

        

        

        

        


        

        

        










































































































































































        


























































           


            







           



















































































        











































































































               



















            














            



































            










































            




























            







            
















            
            






















































            


















































            



































