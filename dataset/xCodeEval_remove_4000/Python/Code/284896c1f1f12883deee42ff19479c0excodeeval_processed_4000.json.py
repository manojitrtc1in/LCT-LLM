


































































































































































































































































































































































































































































































































































































































































































































    
    
    
    
    
    
    
    
    
    
    












from collections import deque, defaultdict
                        

def solve():
    input()
    n, k = map(int, input().split())
    graph = defaultdict(list)
    deg = [0] * (n)
    for i in range(n - 1):
        u, v = map(int, input().split())
        graph[u - 1].append(v - 1)
        graph[v - 1].append(u - 1)
        deg[u - 1] += 1
        deg[v - 1] += 1
    ans = n
    queue = deque()
    for i in range(n):
        if deg[i] == 1: queue.append(i)
    for i in range(k):
        if len(queue) == 0 or ans == 1:
            ans = 0
            break
        for i in range(len(queue)):
            node = queue.popleft()
            deg[node] = 0
            ans -= 1
            for v in graph[node]:
                deg[v] -= 1
                if deg[v] == 1: queue.append(v)
    return ans

t = int(input())
while t:
    print(solve())
    t -= 1