from sys import stdin
from collections import deque

mod = 10**9 + 7
import sys
import random

from queue import PriorityQueue
from collections import Counter as cc


from bisect import bisect_right
from bisect import bisect_left
from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil



import heapq

input = lambda : sys.stdin.readline().rstrip()
from sys import stdin, stdout
from heapq import heapify, heappush, heappop
from itertools import permutations
from math import factorial as f



def ncr(n, r, p):
    num = den = 1
    for i in range(r):
        num = (num * (n - i)) % p
        den = (den * (i + 1)) % p
    return (num * pow(den,
                      p - 2, p)) % p

import sys































































































































































































































































































































































































































































































































































































































































































































t = int(input())

for _ in range(t):

    n = int(input())
    s = input()
    if '1' not in s:
        print(s)
        continue
    if '0' not in s:
        print(s)
        continue
    if n == 1:
        print(s)
        continue

    z1 = n-s[::-1].index('0')-1
    z2 = s.index('1')
    if z1>z2:
     print(s[:z2] + '0' + s[z1+1:])
    else:
        print(s)



