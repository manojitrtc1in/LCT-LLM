from sys import stdin
from collections import deque

mod = 10**9 + 7
import sys
import random

from queue import PriorityQueue
from collections import Counter as cc


from bisect import bisect_right
from bisect import bisect_left
from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil



import heapq

input = lambda : sys.stdin.readline().rstrip()
from sys import stdin, stdout
from heapq import heapify, heappush, heappop
from itertools import permutations
from math import factorial as f



def ncr(n, r, p):
    num = den = 1
    for i in range(r):
        num = (num * (n - i)) % p
        den = (den * (i + 1)) % p
    return (num * pow(den,
                      p - 2, p)) % p

import sys








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    




































































































def find_parent(b):

    while par[b]!=b:

        b = par[b]


    return b

t = int(input())

for _ in range(t):
    n = int(input())

    s1 = input()
    s2 = input()

    if s1 == s2:
        print(0)
        continue
    flag = 0
    for i in range(n):
        if s1[i]>s2[i]:
            flag = 1
            break
    if flag:
        print(-1)
        continue

    par = [i for i in range(30)]
    rank = [1]*(30)

    for i in range(n):
        a,b = ord(s1[i])-97,ord(s2[i])-97

        z1,z2 = find_parent(a),find_parent(b)

        if z1!=z2:
            if rank[z1]>rank[z2]:
                z1,z2 = z2,z1

            par[z1] = z2
            rank[z2]+=rank[z1]

    seti = set()
    for i in s1:
        z = find_parent(ord(i)-97)
        seti.add(z)

    ans = 0
    for i in seti:
        ans+=rank[i]-1

    print(ans)









