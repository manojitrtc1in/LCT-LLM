from sys import stdin
from collections import deque

mod = 10**9 + 7
import sys
import random

from queue import PriorityQueue
from collections import Counter as cc


from bisect import bisect_right
from bisect import bisect_left
from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil



import heapq

input = lambda : sys.stdin.readline().rstrip()
from sys import stdin, stdout
from heapq import heapify, heappush, heappop
from itertools import permutations
from math import factorial as f



def ncr(n, r, p):
    num = den = 1
    for i in range(r):
        num = (num * (n - i)) % p
        den = (den * (i + 1)) % p
    return (num * pow(den,
                      p - 2, p)) % p

import sys
















































































































































































































































































































































































































































































































































































































































































t = int(input())
mod = 10**9 + 7
for _ in range(t):

    x = int(input())
    s = list(input())
    i = 0
    ans = len(s)
    while i<x:


        j = i+1
        z = int(s[i])-1
        k = 0
        ha = len(s)
        
        if len(s)<x:
         while k!=z:

            s.append(s[j])
            if j == ha-1:
                k+=1
                j = i+1
            else:
                j+=1
         ans = len(s)
        else:
            z1 = ans - j
            ans = ans + z1*(z)
            ans%=mod
        i+=1
        

    print(ans%mod)




